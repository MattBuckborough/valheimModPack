[Message:   BepInEx] BepInEx 5.4.16.0 - valheim (2021-11-16 4:26:06 PM)
[Info   :   BepInEx] Running under Unity v2019.4.31.12409535
[Info   :   BepInEx] CLR runtime version: 4.0.30319.42000
[Info   :   BepInEx] Supports SRE: True
[Info   :   BepInEx] System platform: Bits64, Windows
[Message:   BepInEx] Preloader started
[Info   :   BepInEx] Loaded 1 patcher method from [BepInEx.Preloader 5.4.16.0]
[Info   :   BepInEx] Loaded 1 patcher method from [SlimVML.Loader 1.1.0.0]
[Info   :   BepInEx] 2 patcher plugins loaded
[Info   :   BepInEx] Patching [UnityEngine.CoreModule] with [BepInEx.Chainloader]
[Info   :   SlimVML] Loading DLLs from D:\SteamLibrary\steamapps\common\Valheim\InSlimVML\Mods
[Warning:   SlimVML] Skipping 0Harmony.dll since it's in ignore list
[Info   :   SlimVML] Invoking static void SlimAssist.SlimAssist::Main(string[] args)
[Message:   BepInEx] Preloader finished
[Message:   BepInEx] Chainloader ready
[Message:   BepInEx] Chainloader started
[Info   :   BepInEx] 12 plugins to load
[Warning:   BepInEx] Plugin [OdinBanners 1.0.0] targets a wrong version of BepInEx (5.4.17.0) and might not work until you update
[Warning:   BepInEx] Plugin [OdinHorse 1.0.0] targets a wrong version of BepInEx (5.4.17.0) and might not work until you update
[Info   :   BepInEx] Loading [Custom Textures 2.7.0]
[Info   :  HarmonyX] Created Harmony instance id=harmony-auto-d7ff45a1-5906-4276-8eb8-7c2a38295a5b, version=2.0.0.0, location=D:\SteamLibrary\steamapps\common\Valheim\BepInEx\core\0Harmony20.dll - Started from System.Void HarmonyLib.Tools.Logger::Log(HarmonyLib.Tools.Logger+LogChannel,System.Func`1[[System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]],System.Boolean) location=D:\SteamLibrary\steamapps\common\Valheim\BepInEx\core\0Harmony.dll
[Info   :  HarmonyX] Patching harmony-auto-d7ff45a1-5906-4276-8eb8-7c2a38295a5b...
[Info   :  HarmonyX] Patching System.Void Terminal::InputText()
[Info   :  HarmonyX] HarmonyPrepare result: True
[Info   :  HarmonyX] Patching virtual void Terminal::InputText() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CustomTextures.BepInExPlugin+InputText_Patch::Prefix(Terminal __instance)

[Info   :  HarmonyX] Running ILHook manipulator on virtual void Terminal::InputText()
[Info   :  HarmonyX] Writing prefixes
[Info   :  HarmonyX] Patching harmony-auto-d7ff45a1-5906-4276-8eb8-7c2a38295a5b took 11ms
[Info   :  HarmonyX] Patching harmony-auto-d7ff45a1-5906-4276-8eb8-7c2a38295a5b...
[Info   :  HarmonyX] Patching System.Void FejdStartup::SetupObjectDB()
[Info   :  HarmonyX] HarmonyPrepare result: True
[Info   :  HarmonyX] Patching void FejdStartup::SetupObjectDB() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomTextures.BepInExPlugin+FejdStartup_SetupObjectDB_Patch::Postfix()

[Info   :  HarmonyX] Running ILHook manipulator on void FejdStartup::SetupObjectDB()
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] Patching harmony-auto-d7ff45a1-5906-4276-8eb8-7c2a38295a5b took 6ms
[Info   :  HarmonyX] Patching harmony-auto-d7ff45a1-5906-4276-8eb8-7c2a38295a5b...
[Info   :  HarmonyX] Patching System.Void ZoneSystem::Awake()
[Info   :  HarmonyX] HarmonyPrepare result: True
[Info   :  HarmonyX] Patching void ZoneSystem::Awake() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomTextures.BepInExPlugin+ZoneSystem_Awake_Patch::Prefix(ZoneSystem __instance)

[Info   :  HarmonyX] Running ILHook manipulator on void ZoneSystem::Awake()
[Info   :  HarmonyX] Writing prefixes
[Info   :  HarmonyX] Patching harmony-auto-d7ff45a1-5906-4276-8eb8-7c2a38295a5b took 7ms
[Info   :  HarmonyX] Patching harmony-auto-d7ff45a1-5906-4276-8eb8-7c2a38295a5b...
[Info   :  HarmonyX] Patching System.Void ZNetScene::Awake()
[Info   :  HarmonyX] HarmonyPrepare result: True
[Info   :  HarmonyX] Patching void ZNetScene::Awake() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomTextures.BepInExPlugin+ZNetScene_Awake_Patch::Postfix(ZNetScene __instance, System.Collections.Generic.Dictionary<int, UnityEngine.GameObject> ___m_namedPrefabs)

[Info   :  HarmonyX] Running ILHook manipulator on void ZNetScene::Awake()
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] Patching harmony-auto-d7ff45a1-5906-4276-8eb8-7c2a38295a5b took 9ms
[Info   :  HarmonyX] Patching harmony-auto-d7ff45a1-5906-4276-8eb8-7c2a38295a5b...
[Info   :  HarmonyX] Patching System.Void ClutterSystem::Awake()
[Info   :  HarmonyX] HarmonyPrepare result: True
[Info   :  HarmonyX] Patching void ClutterSystem::Awake() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomTextures.BepInExPlugin+ClutterSystem_Awake_Patch::Postfix(ClutterSystem __instance)

[Info   :  HarmonyX] Running ILHook manipulator on void ClutterSystem::Awake()
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] Patching harmony-auto-d7ff45a1-5906-4276-8eb8-7c2a38295a5b took 6ms
[Info   :  HarmonyX] Patching harmony-auto-d7ff45a1-5906-4276-8eb8-7c2a38295a5b...
[Info   :  HarmonyX] Patching System.Void ZoneSystem::Start()
[Info   :  HarmonyX] HarmonyPrepare result: True
[Info   :  HarmonyX] Patching void ZoneSystem::Start() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CustomTextures.BepInExPlugin+ZoneSystem_Start_Patch::Prefix()

[Info   :  HarmonyX] Running ILHook manipulator on void ZoneSystem::Start()
[Info   :  HarmonyX] Writing prefixes
[Info   :  HarmonyX] Patching harmony-auto-d7ff45a1-5906-4276-8eb8-7c2a38295a5b took 6ms
[Info   :  HarmonyX] Patching harmony-auto-d7ff45a1-5906-4276-8eb8-7c2a38295a5b...
[Info   :  HarmonyX] Patching System.Void VisEquipment::Awake()
[Info   :  HarmonyX] HarmonyPrepare result: True
[Info   :  HarmonyX] Patching void VisEquipment::Awake() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CustomTextures.BepInExPlugin+VisEquipment_Awake_Patch::Postfix(VisEquipment __instance)

[Info   :  HarmonyX] Running ILHook manipulator on void VisEquipment::Awake()
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] Patching harmony-auto-d7ff45a1-5906-4276-8eb8-7c2a38295a5b took 7ms
[Info   :   BepInEx] Loading [Instant Monster Drop 0.4.0]
[Info   :  HarmonyX] Created Harmony instance id=harmony-auto-79013c99-9cbe-4fee-80b4-68722d17cdc0, version=2.0.0.0, location=D:\SteamLibrary\steamapps\common\Valheim\BepInEx\core\0Harmony20.dll - Started from System.Void HarmonyLib.Tools.Logger::Log(HarmonyLib.Tools.Logger+LogChannel,System.Func`1[[System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]],System.Boolean) location=D:\SteamLibrary\steamapps\common\Valheim\BepInEx\core\0Harmony.dll
[Info   :  HarmonyX] Patching harmony-auto-79013c99-9cbe-4fee-80b4-68722d17cdc0...
[Info   :  HarmonyX] Patching System.Void Ragdoll::Awake()
[Info   :  HarmonyX] HarmonyPrepare result: True
[Info   :  HarmonyX] Patching void Ragdoll::Awake() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void InstantMonsterDrop.BepInExPlugin+Ragdoll_Awake_Patch::Postfix(Ragdoll __instance, ZNetView ___m_nview, EffectList ___m_removeEffect)

[Info   :  HarmonyX] Running ILHook manipulator on void Ragdoll::Awake()
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] Patching harmony-auto-79013c99-9cbe-4fee-80b4-68722d17cdc0 took 6ms
[Info   :  HarmonyX] Patching harmony-auto-79013c99-9cbe-4fee-80b4-68722d17cdc0...
[Info   :  HarmonyX] Patching System.Void Ragdoll::DestroyNow()
[Info   :  HarmonyX] HarmonyPrepare result: True
[Info   :  HarmonyX] Patching void Ragdoll::DestroyNow() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool InstantMonsterDrop.BepInExPlugin+Ragdoll_DestroyNow_Patch::Prefix(Ragdoll __instance)

[Info   :  HarmonyX] Running ILHook manipulator on void Ragdoll::DestroyNow()
[Info   :  HarmonyX] Writing prefixes
[Info   :  HarmonyX] Patching harmony-auto-79013c99-9cbe-4fee-80b4-68722d17cdc0 took 6ms
[Info   :  HarmonyX] Patching harmony-auto-79013c99-9cbe-4fee-80b4-68722d17cdc0...
[Info   :  HarmonyX] Patching System.Void Terminal::InputText()
[Info   :  HarmonyX] HarmonyPrepare result: True
[Info   :  HarmonyX] Patching virtual void Terminal::InputText() with 2 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static bool CustomTextures.BepInExPlugin+InputText_Patch::Prefix(Terminal __instance)
* static bool InstantMonsterDrop.BepInExPlugin+InputText_Patch::Prefix(Terminal __instance)

[Info   :  HarmonyX] Running ILHook manipulator on virtual void Terminal::InputText()
[Info   :  HarmonyX] Writing prefixes
[Info   :  HarmonyX] Patching harmony-auto-79013c99-9cbe-4fee-80b4-68722d17cdc0 took 6ms
[Info   :   BepInEx] Loading [FarmGrid 0.2.0]
[Info   :  HarmonyX] ### Harmony id=Harmony.Sarcen.FarmGrid, version=2.5.5.0, location=D:\SteamLibrary\steamapps\common\Valheim\BepInEx\core\0Harmony.dll, env/clr=4.0.30319.42000, platform=Win32NT, ptrsize:runtime/env=8/Bits64, Windows
### Started from void FarmGrid.FarmGrid::Awake(), location D:\SteamLibrary\steamapps\common\Valheim\BepInEx\plugins\FarmGrid.dll
### At 2022-02-03 07.52.44
[Info   :  HarmonyX] Patching void Player::UpdatePlacementGhost(bool flashGuardStone) with 0 prefixes, 0 postfixes, 1 transpilers, 0 finalizers
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> FarmGrid.Patches.FarmGrid_Patch::UpdatePlacementGhost(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

[Info   :  HarmonyX] Running ILHook manipulator on void Player::UpdatePlacementGhost(bool flashGuardStone)
[Info   :  HarmonyX] Transpiling void Player::UpdatePlacementGhost(bool flashGuardStone)
[Info   :  HarmonyX] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> FarmGrid.Patches.FarmGrid_Patch::UpdatePlacementGhost(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
[Info   :  HarmonyX] Patching bool Player::PlacePiece(Piece piece) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool FarmGrid.Patches.FarmGrid_Patch::PlacePiece(Player& __instance, Boolean& __result, Piece piece)

[Info   :  HarmonyX] Running ILHook manipulator on bool Player::PlacePiece(Piece piece)
[Info   :  HarmonyX] Writing prefixes
[Info   :  HarmonyX] Patching virtual void Humanoid::SetupVisEquipment(VisEquipment visEq, bool isRagdoll) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void FarmGrid.Patches.FarmGrid_Patch::SetupVisEquipment(Humanoid& __instance)

[Info   :  HarmonyX] Running ILHook manipulator on virtual void Humanoid::SetupVisEquipment(VisEquipment visEq, bool isRagdoll)
[Info   :  HarmonyX] Writing postfixes
[Info   :   BepInEx] Loading [kgladder 0.2.0]
[Info   :  HarmonyX] ### Harmony id=BetterLadders, version=2.5.5.0, location=D:\SteamLibrary\steamapps\common\Valheim\BepInEx\core\0Harmony.dll, env/clr=4.0.30319.42000, platform=Win32NT, ptrsize:runtime/env=8/Bits64, Windows
### Started from void BetterLadders.BetterLadders::.ctor(), location D:\SteamLibrary\steamapps\common\Valheim\BepInEx\plugins\BetterLadders.dll
### At 2022-02-03 07.52.44
[Info   :  HarmonyX] Patching void AutoJumpLedge::OnTriggerStay(UnityEngine.Collider collider) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool BetterLadders.BetterLadders+Ladder_Patch::Prefix(AutoJumpLedge __instance, UnityEngine.Collider collider)

[Info   :  HarmonyX] Running ILHook manipulator on void AutoJumpLedge::OnTriggerStay(UnityEngine.Collider collider)
[Info   :  HarmonyX] Writing prefixes
[Info   :   BepInEx] Loading [ValheimMod 0.0.1]
[Info   :  HarmonyX] ### Harmony id=buckborogue.ValheimMod, version=2.5.5.0, location=D:\SteamLibrary\steamapps\common\Valheim\BepInEx\core\0Harmony.dll, env/clr=4.0.30319.42000, platform=Win32NT, ptrsize:runtime/env=8/Bits64, Windows
### Started from void ValheimMod.ValheimMod::.ctor(), location D:\SteamLibrary\steamapps\common\Valheim\BepInEx\plugins\ValheimMod.dll
### At 2022-02-03 07.52.44
[Info   :  HarmonyX] Patching void Character::Jump() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void ValheimMod.ValheimMod+Jump_Patch::Prefix(Single& ___m_jumpForce)

[Info   :  HarmonyX] Running ILHook manipulator on void Character::Jump()
[Info   :  HarmonyX] Writing prefixes
[Info   :   BepInEx] Loading [Bigger Item Stack 0.1.2.0]
[Message:Bigger Item Stack] This mod is Created by Sixefyle!
[Info   :  HarmonyX] ### Harmony id=harmony-auto-e380a977-aaaa-473b-8a47-22c5a4e23722, version=2.5.5.0, location=D:\SteamLibrary\steamapps\common\Valheim\BepInEx\core\0Harmony.dll, env/clr=4.0.30319.42000, platform=Win32NT, ptrsize:runtime/env=8/Bits64, Windows
### Started from void BiggerItemStack.ValheimMultipliersPlugin::Awake(), location D:\SteamLibrary\steamapps\common\Valheim\BepInEx\plugins\BiggerItemStack.dll
### At 2022-02-03 07.52.44
[Info   :  HarmonyX] Patching void ItemDrop::Awake() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void BiggerItemStack.ValheimMultipliersPlugin+ModifyMaxStack::Prefix(ItemDrop& __instance)

[Info   :  HarmonyX] Running ILHook manipulator on void ItemDrop::Awake()
[Info   :  HarmonyX] Writing prefixes
[Info   :   BepInEx] Loading [Valheim Plus 0.9.9.7]
[Info   :  HarmonyX] ### Harmony id=mod.valheim_plus, version=2.5.5.0, location=D:\SteamLibrary\steamapps\common\Valheim\BepInEx\core\0Harmony.dll, env/clr=4.0.30319.42000, platform=Win32NT, ptrsize:runtime/env=8/Bits64, Windows
### Started from static void ValheimPlus.ValheimPlusPlugin::.cctor(), location D:\SteamLibrary\steamapps\common\Valheim\BepInEx\plugins\ValheimPlus.dll
### At 2022-02-03 07.52.44
[Info   :Valheim Plus] Trying to load the configuration file
[Info   :Valheim Plus] Configuration file loaded succesfully.
[Info   :  HarmonyX] Patching void Player::UpdatePlacement(bool takeInput, float dt) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void ValheimPlus.FreePlacementRotation+ModifyPUpdatePlacement::Postfix(Player __instance, bool takeInput, float dt)

[Info   :  HarmonyX] Running ILHook manipulator on void Player::UpdatePlacement(bool takeInput, float dt)
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] Patching void Player::UpdatePlacementGhost(bool flashGuardStone) with 0 prefixes, 1 postfixes, 1 transpilers, 0 finalizers
1 postfixes:
* static void ValheimPlus.FreePlacementRotation+ModifyPlacingRestrictionOfGhost::Postfix(Player __instance, bool flashGuardStone)
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> FarmGrid.Patches.FarmGrid_Patch::UpdatePlacementGhost(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

[Info   :  HarmonyX] Running ILHook manipulator on void Player::UpdatePlacementGhost(bool flashGuardStone)
[Info   :  HarmonyX] Transpiling void Player::UpdatePlacementGhost(bool flashGuardStone)
[Info   :  HarmonyX] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> FarmGrid.Patches.FarmGrid_Patch::UpdatePlacementGhost(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] Patching void Hud::DamageFlash() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void ValheimPlus.Hud_DamageFlash_Patch::Postfix(Hud __instance)

[Info   :  HarmonyX] Running ILHook manipulator on void Hud::DamageFlash()
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] Patching void SE_Rested::UpdateTTL() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void ValheimPlus.SE_Rested_UpdateTTL_Patch::Prefix(Single& ___m_TTLPerComfortLevel)

[Info   :  HarmonyX] Running ILHook manipulator on void SE_Rested::UpdateTTL()
[Info   :  HarmonyX] Writing prefixes
[Info   :  HarmonyX] Patching static System.Collections.Generic.List<Piece> SE_Rested::GetNearbyPieces(UnityEngine.Vector3 point) with 0 prefixes, 0 postfixes, 1 transpilers, 0 finalizers
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> ValheimPlus.SE_Rested_GetNearbyPieces_Transpiler::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

[Info   :  HarmonyX] Running ILHook manipulator on static System.Collections.Generic.List<Piece> SE_Rested::GetNearbyPieces(UnityEngine.Vector3 point)
[Info   :  HarmonyX] Transpiling static System.Collections.Generic.List<Piece> SE_Rested::GetNearbyPieces(UnityEngine.Vector3 point)
[Info   :  HarmonyX] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> ValheimPlus.SE_Rested_GetNearbyPieces_Transpiler::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
[Info   :  HarmonyX] Patching static System.Collections.Generic.List<Piece> SE_Rested::GetNearbyComfortPieces(UnityEngine.Vector3 point) with 0 prefixes, 0 postfixes, 1 transpilers, 0 finalizers
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> ValheimPlus.SE_Rested_GetNearbyComfortPieces_Transpiler::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

[Info   :  HarmonyX] Running ILHook manipulator on static System.Collections.Generic.List<Piece> SE_Rested::GetNearbyComfortPieces(UnityEngine.Vector3 point)
[Info   :  HarmonyX] Transpiling static System.Collections.Generic.List<Piece> SE_Rested::GetNearbyComfortPieces(UnityEngine.Vector3 point)
[Info   :  HarmonyX] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> ValheimPlus.SE_Rested_GetNearbyComfortPieces_Transpiler::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
[Info   :  HarmonyX] Patching void Piece::DropResources() with 0 prefixes, 0 postfixes, 1 transpilers, 0 finalizers
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> ValheimPlus.Piece_DropResources_Transpiler::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

[Info   :  HarmonyX] Running ILHook manipulator on void Piece::DropResources()
[Info   :  HarmonyX] Transpiling void Piece::DropResources()
[Info   :  HarmonyX] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> ValheimPlus.Piece_DropResources_Transpiler::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
[Info   :  HarmonyX] Patching void StationExtension::Awake() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void ValheimPlus.StationExtension_Awake_Patch::Prefix(Single& ___m_maxStationDistance)

[Info   :  HarmonyX] Running ILHook manipulator on void StationExtension::Awake()
[Info   :  HarmonyX] Writing prefixes
[Info   :  HarmonyX] Patching void HotkeyBar::UpdateIcons(Player player) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void ValheimPlus.UI.HotkeyBar_UpdateIcons_Patch::Postfix(HotkeyBar& __instance, Player& player)

[Info   :  HarmonyX] Running ILHook manipulator on void HotkeyBar::UpdateIcons(Player player)
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] Patching void FejdStartup::Update() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void ValheimPlus.UI.PatchUI::Postfix(UnityEngine.GameObject& ___m_mainMenu, UnityEngine.GameObject& ___m_settingsPrefab)

[Info   :  HarmonyX] Running ILHook manipulator on void FejdStartup::Update()
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] Patching virtual string Bed::GetHoverText() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void ValheimPlus.GameClasses.Bed_GetHoverText_Patch::Postfix(Bed __instance, String& __result, ZNetView ___m_nview)

[Info   :  HarmonyX] Running ILHook manipulator on virtual string Bed::GetHoverText()
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] Patching virtual bool Bed::Interact(Humanoid human, bool repeat, bool alt) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void ValheimPlus.GameClasses.Bed_Interact_Patch::Postfix(Bed __instance, Humanoid human, bool repeat, ZNetView ___m_nview)

[Info   :  HarmonyX] Running ILHook manipulator on virtual bool Bed::Interact(Humanoid human, bool repeat, bool alt)
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] Patching virtual bool Bed::Interact(Humanoid human, bool repeat, bool alt) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool ValheimPlus.GameClasses.Bed_InteractIgnoreStandaloneE_Patch::Prefix(Bed __instance, Humanoid human)
1 postfixes:
* static void ValheimPlus.GameClasses.Bed_Interact_Patch::Postfix(Bed __instance, Humanoid human, bool repeat, ZNetView ___m_nview)

[Info   :  HarmonyX] Running ILHook manipulator on virtual bool Bed::Interact(Humanoid human, bool repeat, bool alt)
[Info   :  HarmonyX] Writing prefixes
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] Patching void Beehive::Awake() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool ValheimPlus.GameClasses.Beehive_Awake_Patch::Prefix(Single& ___m_secPerUnit, Int32& ___m_maxHoney)

[Info   :  HarmonyX] Running ILHook manipulator on void Beehive::Awake()
[Info   :  HarmonyX] Writing prefixes
[Info   :  HarmonyX] Patching virtual string Beehive::GetHoverText() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool ValheimPlus.GameClasses.Beehive_GetHoverText_Patch::Prefix(Beehive __instance, String& __result)

[Info   :  HarmonyX] Running ILHook manipulator on virtual string Beehive::GetHoverText()
[Info   :  HarmonyX] Writing prefixes
[Info   :  HarmonyX] Patching void Beehive::RPC_Extract(long caller) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool ValheimPlus.GameClasses.Beehive_RPC_Extract_Patch::Prefix(long caller, Beehive& __instance)

[Info   :  HarmonyX] Running ILHook manipulator on void Beehive::RPC_Extract(long caller)
[Info   :  HarmonyX] Writing prefixes
[Info   :  HarmonyX] Patching void Beehive::UpdateBees() with 0 prefixes, 0 postfixes, 1 transpilers, 0 finalizers
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> ValheimPlus.GameClasses.Beehive_UpdateBees_Transpiler::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

[Info   :  HarmonyX] Running ILHook manipulator on void Beehive::UpdateBees()
[Info   :  HarmonyX] Transpiling void Beehive::UpdateBees()
[Info   :  HarmonyX] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> ValheimPlus.GameClasses.Beehive_UpdateBees_Transpiler::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
[Info   :  HarmonyX] Patching virtual void Character::Damage(HitData hit) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void ValheimPlus.GameClasses.Character_Damage_Patch::Prefix(Character& __instance, HitData& hit)
1 postfixes:
* static void ValheimPlus.GameClasses.Character_Damage_Patch::Postfix(Character& __instance, HitData& hit)

[Info   :  HarmonyX] Running ILHook manipulator on virtual void Character::Damage(HitData hit)
[Info   :  HarmonyX] Writing prefixes
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] Patching void Character::UpdateGroundContact(float dt) with 0 prefixes, 0 postfixes, 1 transpilers, 0 finalizers
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> ValheimPlus.GameClasses.Character_UpdateGroundContact_Transpiler::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

[Info   :  HarmonyX] Running ILHook manipulator on void Character::UpdateGroundContact(float dt)
[Info   :  HarmonyX] Transpiling void Character::UpdateGroundContact(float dt)
[Info   :  HarmonyX] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> ValheimPlus.GameClasses.Character_UpdateGroundContact_Transpiler::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
[Info   :  HarmonyX] Patching StatusEffect SEMan::AddStatusEffect(StatusEffect statusEffect, bool resetTime) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void ValheimPlus.GameClasses.SEMan_AddStatusEffect_Patch::Postfix(SEMan& __instance, StatusEffect& statusEffect, bool resetTime)

[Info   :  HarmonyX] Running ILHook manipulator on StatusEffect SEMan::AddStatusEffect(StatusEffect statusEffect, bool resetTime)
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] Patching void Talker::Awake() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool ValheimPlus.GameClasses.Chat_Awake_Patch::Prefix(Talker& __instance)

[Info   :  HarmonyX] Running ILHook manipulator on void Talker::Awake()
[Info   :  HarmonyX] Writing prefixes
[Info   :  HarmonyX] Patching void Container::Awake() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void ValheimPlus.GameClasses.Container_Awake_Patch::Postfix(Container __instance, Inventory& ___m_inventory)

[Info   :  HarmonyX] Running ILHook manipulator on void Container::Awake()
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] Patching ItemDrop+ItemData CookingStation::FindCookableItem(Inventory inventory) with 0 prefixes, 0 postfixes, 1 transpilers, 0 finalizers
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> ValheimPlus.GameClasses.CookingStation_FindCookableItem_Transpiler::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

[Info   :  HarmonyX] Running ILHook manipulator on ItemDrop+ItemData CookingStation::FindCookableItem(Inventory inventory)
[Info   :  HarmonyX] Transpiling ItemDrop+ItemData CookingStation::FindCookableItem(Inventory inventory)
[Info   :  HarmonyX] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> ValheimPlus.GameClasses.CookingStation_FindCookableItem_Transpiler::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
[Info   :  HarmonyX] Patching System.Collections.Generic.List<UnityEngine.GameObject> DropTable::GetDropList(int amount) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void ValheimPlus.GameClasses.DropTable_GetDropList_Patch::Prefix(DropTable& __instance, System.Collections.Generic.List`1[[UnityEngine.GameObject, UnityEngine.CoreModule, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]& __result, int amount)
1 postfixes:
* static void ValheimPlus.GameClasses.DropTable_GetDropList_Patch::Postfix(DropTable& __instance, System.Collections.Generic.List`1[[UnityEngine.GameObject, UnityEngine.CoreModule, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]& __result, int amount)

[Info   :  HarmonyX] Running ILHook manipulator on System.Collections.Generic.List<UnityEngine.GameObject> DropTable::GetDropList(int amount)
[Info   :  HarmonyX] Writing prefixes
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] Patching void FejdStartup::Awake() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void ValheimPlus.GameClasses.HookServerStart::Postfix(FejdStartup& __instance)

[Info   :  HarmonyX] Running ILHook manipulator on void FejdStartup::Awake()
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] Patching void FejdStartup::SetupGui() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void ValheimPlus.GameClasses.FejdStartup_SetupGui_Patch::Postfix(FejdStartup& __instance)

[Info   :  HarmonyX] Running ILHook manipulator on void FejdStartup::SetupGui()
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] Patching bool FejdStartup::IsPublicPasswordValid(string password, World world) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool ValheimPlus.GameClasses.ChangeServerPasswordBehavior::Prefix(Boolean& __result)

[Info   :  HarmonyX] Running ILHook manipulator on bool FejdStartup::IsPublicPasswordValid(string password, World world)
[Info   :  HarmonyX] Writing prefixes
[Info   :  HarmonyX] Patching string FejdStartup::GetPublicPasswordError(string password, World world) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool ValheimPlus.GameClasses.RemovePublicPasswordError::Prefix(String& __result)

[Info   :  HarmonyX] Running ILHook manipulator on string FejdStartup::GetPublicPasswordError(string password, World world)
[Info   :  HarmonyX] Writing prefixes
[Info   :  HarmonyX] Patching void Fireplace::Awake() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void ValheimPlus.GameClasses.FireplaceFuel+Fireplace_Awake_Patch::Postfix(Fireplace& __instance)

[Info   :  HarmonyX] Running ILHook manipulator on void Fireplace::Awake()
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] Patching double Fireplace::GetTimeSinceLastUpdate() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void ValheimPlus.GameClasses.FireplaceFuel+Fireplace_GetTimeSinceLastUpdate_Patch::Postfix(Double& __result, Fireplace& __instance)

[Info   :  HarmonyX] Running ILHook manipulator on double Fireplace::GetTimeSinceLastUpdate()
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] Patching void Fireplace::UpdateFireplace() with 0 prefixes, 0 postfixes, 1 transpilers, 0 finalizers
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> ValheimPlus.GameClasses.FireplaceFuel+Fireplace_UpdateFireplace_Transpiler::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

[Info   :  HarmonyX] Running ILHook manipulator on void Fireplace::UpdateFireplace()
[Info   :  HarmonyX] Transpiling void Fireplace::UpdateFireplace()
[Info   :  HarmonyX] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> ValheimPlus.GameClasses.FireplaceFuel+Fireplace_UpdateFireplace_Transpiler::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
[Info   :  HarmonyX] Patching virtual bool Fireplace::Interact(Humanoid user, bool hold, bool alt) with 0 prefixes, 0 postfixes, 1 transpilers, 0 finalizers
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> ValheimPlus.GameClasses.Fireplace_Interact_Transpiler::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

[Info   :  HarmonyX] Running ILHook manipulator on virtual bool Fireplace::Interact(Humanoid user, bool hold, bool alt)
[Info   :  HarmonyX] Transpiling virtual bool Fireplace::Interact(Humanoid user, bool hold, bool alt)
[Info   :  HarmonyX] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> ValheimPlus.GameClasses.Fireplace_Interact_Transpiler::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
[Info   :  HarmonyX] Patching void GameCamera::UpdateCamera(float dt) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void ValheimPlus.GameClasses.BlockCameraScrollInAEM::Prefix(GameCamera __instance)

[Info   :  HarmonyX] Running ILHook manipulator on void GameCamera::UpdateCamera(float dt)
[Info   :  HarmonyX] Writing prefixes
[Info   :  HarmonyX] Patching void Chat::OnNewChatMessage(UnityEngine.GameObject go, long senderID, UnityEngine.Vector3 pos, Talker+Type type, string user, string text) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool ValheimPlus.GameClasses.Chat_AddInworldText_Patch::Prefix(Chat& __instance, UnityEngine.GameObject go, long senderID, UnityEngine.Vector3 pos, Talker+Type type, string user, string text)

[Info   :  HarmonyX] Running ILHook manipulator on void Chat::OnNewChatMessage(UnityEngine.GameObject go, long senderID, UnityEngine.Vector3 pos, Talker+Type type, string user, string text)
[Info   :  HarmonyX] Writing prefixes
[Info   :  HarmonyX] Patching void Chat::AddInworldText(UnityEngine.GameObject go, long senderID, UnityEngine.Vector3 position, Talker+Type type, string user, string text) with 0 prefixes, 0 postfixes, 1 transpilers, 0 finalizers
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> ValheimPlus.GameClasses.Chat_AddInworldText_Transpiler::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

[Info   :  HarmonyX] Running ILHook manipulator on void Chat::AddInworldText(UnityEngine.GameObject go, long senderID, UnityEngine.Vector3 position, Talker+Type type, string user, string text)
[Info   :  HarmonyX] Transpiling void Chat::AddInworldText(UnityEngine.GameObject go, long senderID, UnityEngine.Vector3 position, Talker+Type type, string user, string text)
[Info   :  HarmonyX] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> ValheimPlus.GameClasses.Chat_AddInworldText_Transpiler::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
[Info   :  HarmonyX] Patching void Chat::AddString(string user, string text, Talker+Type type) with 0 prefixes, 0 postfixes, 1 transpilers, 0 finalizers
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> ValheimPlus.GameClasses.Chat_AddString_Transpiler::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

[Info   :  HarmonyX] Running ILHook manipulator on void Chat::AddString(string user, string text, Talker+Type type)
[Info   :  HarmonyX] Transpiling void Chat::AddString(string user, string text, Talker+Type type)
[Info   :  HarmonyX] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> ValheimPlus.GameClasses.Chat_AddString_Transpiler::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
[Info   :  HarmonyX] Patching virtual void UnityEngine.EventSystems.EventSystem::OnApplicationFocus(bool hasFocus) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void ValheimPlus.GameClasses.EventSystem_OnApplicationFocus_Patch::Postfix(bool hasFocus)

[Info   :  HarmonyX] Running ILHook manipulator on virtual void UnityEngine.EventSystems.EventSystem::OnApplicationFocus(bool hasFocus)
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] Patching void MonsterAI::UpdateSleep(float dt) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void ValheimPlus.GameClasses.MonsterAI_UpdateSleep_Patch::Prefix(MonsterAI __instance, Single& dt)

[Info   :  HarmonyX] Running ILHook manipulator on void MonsterAI::UpdateSleep(float dt)
[Info   :  HarmonyX] Writing prefixes
[Info   :  HarmonyX] Patching void Pickable::RPC_Pick(long sender) with 0 prefixes, 0 postfixes, 1 transpilers, 0 finalizers
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> ValheimPlus.GameClasses.Pickable_RPC_Pick_Transpiler::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions, System.Reflection.Emit.ILGenerator generator)

[Info   :  HarmonyX] Running ILHook manipulator on void Pickable::RPC_Pick(long sender)
[Info   :  HarmonyX] Transpiling void Pickable::RPC_Pick(long sender)
[Info   :  HarmonyX] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> ValheimPlus.GameClasses.Pickable_RPC_Pick_Transpiler::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions, System.Reflection.Emit.ILGenerator generator)
[Info   :  HarmonyX] Patching void Settings::Awake() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void ValheimPlus.GameClasses.Settings_LoadSettings_Patch::Postfix()

[Info   :  HarmonyX] Running ILHook manipulator on void Settings::Awake()
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] Patching void Settings::SaveSettings() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void ValheimPlus.GameClasses.Settings_SaveSettings_Patch::Postfix()

[Info   :  HarmonyX] Running ILHook manipulator on void Settings::SaveSettings()
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] Patching float Attack::GetAttackStamina() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void ValheimPlus.GameClasses.Attack_GetAttackStamina_Patch::Postfix(Attack& __instance, Single& __result)

[Info   :  HarmonyX] Running ILHook manipulator on float Attack::GetAttackStamina()
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] Patching void Attack::ProjectileAttackTriggered() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void ValheimPlus.GameClasses.Attack_ProjectileAttackTriggered_Patch::Prefix(Attack& __instance)

[Info   :  HarmonyX] Running ILHook manipulator on void Attack::ProjectileAttackTriggered()
[Info   :  HarmonyX] Writing prefixes
[Info   :  HarmonyX] Patching string Tameable::GetHoverText() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void ValheimPlus.GameClasses.Tameable_GetHoverText_Patch::Postfix(Tameable __instance, String& __result)

[Info   :  HarmonyX] Running ILHook manipulator on string Tameable::GetHoverText()
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] Patching void TeleportWorld::Teleport(Player player) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool ValheimPlus.GameClasses.TeleportWorld_Teleport_Patch::Prefix(TeleportWorld& __instance, Player& player)

[Info   :  HarmonyX] Running ILHook manipulator on void TeleportWorld::Teleport(Player player)
[Info   :  HarmonyX] Writing prefixes
[Info   :  HarmonyX] Patching virtual string TeleportWorld::GetHoverText() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void ValheimPlus.GameClasses.TeleportWorld_bigPortalText_Patch::Postfix(TeleportWorld __instance, string __result)

[Info   :  HarmonyX] Running ILHook manipulator on virtual string TeleportWorld::GetHoverText()
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] Patching ItemDrop+ItemData Humanoid::GetCurrentWeapon() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static ItemDrop+ItemData ValheimPlus.GameClasses.ModifyCurrentWeapon::Postfix(ItemDrop+ItemData __weapon, Character& __instance)

[Info   :  HarmonyX] Running ILHook manipulator on ItemDrop+ItemData Humanoid::GetCurrentWeapon()
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] Patching bool Humanoid::EquipItem(ItemDrop+ItemData item, bool triggerEquipEffects) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static bool ValheimPlus.GameClasses.Humanoid_EquipItem_Patch::Postfix(bool __result, Humanoid __instance, ItemDrop+ItemData item)

[Info   :  HarmonyX] Running ILHook manipulator on bool Humanoid::EquipItem(ItemDrop+ItemData item, bool triggerEquipEffects)
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] Patching void Humanoid::UnequipItem(ItemDrop+ItemData item, bool triggerEquipEffects) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void ValheimPlus.GameClasses.Humanoid_UnequipItem_Patch::Postfix(Humanoid __instance, ItemDrop+ItemData item)

[Info   :  HarmonyX] Running ILHook manipulator on void Humanoid::UnequipItem(ItemDrop+ItemData item, bool triggerEquipEffects)
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] Patching void Humanoid::UpdateEquipment(float dt) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool ValheimPlus.GameClasses.Humanoid_UpdateEquipment_Patch::Prefix(Humanoid __instance)

[Info   :  HarmonyX] Running ILHook manipulator on void Humanoid::UpdateEquipment(float dt)
[Info   :  HarmonyX] Writing prefixes
[Info   :  HarmonyX] Patching void Humanoid::UpdateEquipment(float dt) with 1 prefixes, 0 postfixes, 1 transpilers, 0 finalizers
1 prefixes:
* static bool ValheimPlus.GameClasses.Humanoid_UpdateEquipment_Patch::Prefix(Humanoid __instance)
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> ValheimPlus.GameClasses.Player_Humanoid_UpdateEquipment::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

[Info   :  HarmonyX] Running ILHook manipulator on void Humanoid::UpdateEquipment(float dt)
[Info   :  HarmonyX] Transpiling void Humanoid::UpdateEquipment(float dt)
[Info   :  HarmonyX] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> ValheimPlus.GameClasses.Player_Humanoid_UpdateEquipment::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
[Info   :  HarmonyX] Writing prefixes
[Info   :  HarmonyX] Patching void Fermenter::Awake() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool ValheimPlus.GameClasses.ApplyFermenterChanges::Prefix(Single& ___m_fermentationDuration, Fermenter& __instance)

[Info   :  HarmonyX] Running ILHook manipulator on void Fermenter::Awake()
[Info   :  HarmonyX] Writing prefixes
[Info   :  HarmonyX] Patching Fermenter+ItemConversion Fermenter::GetItemConversion(string itemName) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void ValheimPlus.GameClasses.ApplyFermenterItemCountChanges::Postfix(Fermenter+ItemConversion& __result)

[Info   :  HarmonyX] Running ILHook manipulator on Fermenter+ItemConversion Fermenter::GetItemConversion(string itemName)
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] Patching virtual string Fermenter::GetHoverText() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool ValheimPlus.GameClasses.Fermenter_GetHoverText_Patch::Prefix(Fermenter& __instance, String& __result)

[Info   :  HarmonyX] Running ILHook manipulator on virtual string Fermenter::GetHoverText()
[Info   :  HarmonyX] Writing prefixes
[Info   :  HarmonyX] Patching void Fermenter::SlowUpdate() with 0 prefixes, 0 postfixes, 1 transpilers, 0 finalizers
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> ValheimPlus.GameClasses.Fermenter_SlowUpdate_Transpiler::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

[Info   :  HarmonyX] Running ILHook manipulator on void Fermenter::SlowUpdate()
[Info   :  HarmonyX] Transpiling void Fermenter::SlowUpdate()
[Info   :  HarmonyX] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> ValheimPlus.GameClasses.Fermenter_SlowUpdate_Transpiler::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
[Info   :  HarmonyX] Patching void Fermenter::DelayedTap() with 0 prefixes, 0 postfixes, 1 transpilers, 0 finalizers
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> ValheimPlus.GameClasses.Fermenter_DelayedTap_Transpiler::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

[Info   :  HarmonyX] Running ILHook manipulator on void Fermenter::DelayedTap()
[Info   :  HarmonyX] Transpiling void Fermenter::DelayedTap()
[Info   :  HarmonyX] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> ValheimPlus.GameClasses.Fermenter_DelayedTap_Transpiler::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
[Info   :  HarmonyX] Patching bool Inventory::IsTeleportable() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void ValheimPlus.GameClasses.noItemTeleportPrevention::Postfix(Boolean& __result)

[Info   :  HarmonyX] Running ILHook manipulator on bool Inventory::IsTeleportable()
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] Patching bool Inventory::TopFirst(ItemDrop+ItemData item) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool ValheimPlus.GameClasses.Inventory_TopFirst_Patch::Prefix(Boolean& __result)

[Info   :  HarmonyX] Running ILHook manipulator on bool Inventory::TopFirst(ItemDrop+ItemData item)
[Info   :  HarmonyX] Writing prefixes
[Info   :  HarmonyX] Patching void Inventory::.ctor(string name, UnityEngine.Sprite bkg, int w, int h) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void ValheimPlus.GameClasses.Inventory_Constructor_Patch::Prefix(string name, Int32& w, Int32& h)

[Info   :  HarmonyX] Running ILHook manipulator on void Inventory::.ctor(string name, UnityEngine.Sprite bkg, int w, int h)
[Info   :  HarmonyX] Writing prefixes
[Info   :  HarmonyX] Patching void Inventory::MoveAll(Inventory fromInventory) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void ValheimPlus.GameClasses.Inventory_MoveAll_Patch::Prefix(Inventory& __instance, Inventory& fromInventory)

[Info   :  HarmonyX] Running ILHook manipulator on void Inventory::MoveAll(Inventory fromInventory)
[Info   :  HarmonyX] Writing prefixes
[Info   :  HarmonyX] Patching virtual void Console::Awake() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void ValheimPlus.GameClasses.Console_Awake_Patch::Postfix(Console& __instance)

[Info   :  HarmonyX] Running ILHook manipulator on virtual void Console::Awake()
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] Patching bool Console::IsConsoleEnabled() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool ValheimPlus.GameClasses.Console_IsConsoleEnabled_Patch::Prefix(Console& __instance, Boolean& __result)

[Info   :  HarmonyX] Running ILHook manipulator on bool Console::IsConsoleEnabled()
[Info   :  HarmonyX] Writing prefixes
[Info   :  HarmonyX] Reverse patching static void ValheimPlus.GameClasses.HookZNet::GetOtherPublicPlayers(object instance, System.Collections.Generic.List<ZNet+PlayerInfo> playerList) with void ZNet::GetOtherPublicPlayers(System.Collections.Generic.List<ZNet+PlayerInfo> playerList)

[Info   :  HarmonyX] Patching void ZNet::Awake() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void ValheimPlus.GameClasses.ChangeGameServerVariables::Postfix(ZNet& __instance)

[Info   :  HarmonyX] Running ILHook manipulator on void ZNet::Awake()
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] Patching void ZNet::SendPeriodicData(float dt) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void ValheimPlus.GameClasses.PeriodicDataHandler::Postfix()

[Info   :  HarmonyX] Running ILHook manipulator on void ZNet::SendPeriodicData(float dt)
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] Patching void ZNet::RPC_PeerInfo(ZRpc rpc, ZPackage pkg) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void ValheimPlus.GameClasses.ConfigServerSync::Postfix(ZNet& __instance)

[Info   :  HarmonyX] Running ILHook manipulator on void ZNet::RPC_PeerInfo(ZRpc rpc, ZPackage pkg)
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] Patching void ZNet::Shutdown() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void ValheimPlus.GameClasses.OnErrorLoadOwnIni::Prefix(ZNet& __instance)

[Info   :  HarmonyX] Running ILHook manipulator on void ZNet::Shutdown()
[Info   :  HarmonyX] Writing prefixes
[Info   :  HarmonyX] Patching void ZNet::SetPublicReferencePosition(bool pub) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void ValheimPlus.GameClasses.PreventPublicPositionToggle::Postfix(Boolean& pub, Boolean& ___m_publicReferencePosition)

[Info   :  HarmonyX] Running ILHook manipulator on void ZNet::SetPublicReferencePosition(bool pub)
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] Patching void ZNet::RPC_RefPos(ZRpc rpc, UnityEngine.Vector3 pos, bool publicRefPos) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void ValheimPlus.GameClasses.PlayerPositionWatcher::Postfix(ZNet& __instance, ZRpc rpc, UnityEngine.Vector3 pos, bool publicRefPos)

[Info   :  HarmonyX] Running ILHook manipulator on void ZNet::RPC_RefPos(ZRpc rpc, UnityEngine.Vector3 pos, bool publicRefPos)
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] Patching void Skills::RaiseSkill(Skills+SkillType skillType, float factor) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void ValheimPlus.GameClasses.AddExpGainedDisplay::Prefix(Skills& __instance, Skills+SkillType& skillType, Single& factor)
1 postfixes:
* static void ValheimPlus.GameClasses.AddExpGainedDisplay::Postfix(Skills __instance, Skills+SkillType skillType, float factor)

[Info   :  HarmonyX] Running ILHook manipulator on void Skills::RaiseSkill(Skills+SkillType skillType, float factor)
[Info   :  HarmonyX] Writing prefixes
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] Patching void Skills::OnDeath() with 0 prefixes, 0 postfixes, 1 transpilers, 0 finalizers
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> ValheimPlus.GameClasses.Skills_OnDeath_Transpiler::Transpile(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

[Info   :  HarmonyX] Running ILHook manipulator on void Skills::OnDeath()
[Info   :  HarmonyX] Transpiling void Skills::OnDeath()
[Info   :  HarmonyX] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> ValheimPlus.GameClasses.Skills_OnDeath_Transpiler::Transpile(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
[Info   :  HarmonyX] Patching void ItemDrop::Awake() with 2 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static void BiggerItemStack.ValheimMultipliersPlugin+ModifyMaxStack::Prefix(ItemDrop& __instance)
* static void ValheimPlus.GameClasses.ItemDrop_Awake_Patch::Prefix(ItemDrop& __instance)

[Info   :  HarmonyX] Running ILHook manipulator on void ItemDrop::Awake()
[Info   :  HarmonyX] Writing prefixes
[Info   :  HarmonyX] Patching void ItemDrop::TimedDestruction() with 0 prefixes, 0 postfixes, 1 transpilers, 0 finalizers
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> ValheimPlus.GameClasses.ItemDrop_TimedDestruction_Patch::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

[Info   :  HarmonyX] Running ILHook manipulator on void ItemDrop::TimedDestruction()
[Info   :  HarmonyX] Transpiling void ItemDrop::TimedDestruction()
[Info   :  HarmonyX] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> ValheimPlus.GameClasses.ItemDrop_TimedDestruction_Patch::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
[Info   :  HarmonyX] Patching float ItemDrop+ItemData::GetMaxDurability(int quality) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool ValheimPlus.GameClasses.ItemDrop_GetMaxDurability_Patch::Prefix(ItemDrop+ItemData& __instance, Int32& quality, Single& __result)

[Info   :  HarmonyX] Running ILHook manipulator on float ItemDrop+ItemData::GetMaxDurability(int quality)
[Info   :  HarmonyX] Writing prefixes
[Info   :  HarmonyX] Patching float ItemDrop+ItemData::GetArmor(int quality) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool ValheimPlus.GameClasses.ItemDrop_GetArmor_Patch::Prefix(ItemDrop+ItemData& __instance, Int32& quality, Single& __result)

[Info   :  HarmonyX] Running ILHook manipulator on float ItemDrop+ItemData::GetArmor(int quality)
[Info   :  HarmonyX] Writing prefixes
[Info   :  HarmonyX] Patching float ItemDrop+ItemData::GetBaseBlockPower(int quality) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool ValheimPlus.GameClasses.ItemDrop_GetBaseBlockPower_Patch::Prefix(ItemDrop+ItemData& __instance, Int32& quality, Single& __result)

[Info   :  HarmonyX] Running ILHook manipulator on float ItemDrop+ItemData::GetBaseBlockPower(int quality)
[Info   :  HarmonyX] Writing prefixes
[Info   :  HarmonyX] Patching virtual void Player::Awake() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void ValheimPlus.GameClasses.Player_Awake_Patch::Postfix(Player& __instance)

[Info   :  HarmonyX] Running ILHook manipulator on virtual void Player::Awake()
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] Patching void Player::Update() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void ValheimPlus.GameClasses.Player_Update_Patch::Postfix(Player& __instance, UnityEngine.Vector3& ___m_moveDir, UnityEngine.Vector3& ___m_lookDir, UnityEngine.GameObject& ___m_placementGhost, UnityEngine.Transform ___m_eye)

[Info   :  HarmonyX] Running ILHook manipulator on void Player::Update()
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] Reverse patching static void ValheimPlus.GameClasses.Player_Dodge_ReversePatch::call_Dodge(object instance, UnityEngine.Vector3 dodgeDir) with void Player::Dodge(UnityEngine.Vector3 dodgeDir)

[Info   :  HarmonyX] Patching virtual void SE_Stats::Setup(Character character) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void ValheimPlus.GameClasses.SE_Stats_Setup_Patch::Postfix(SE_Stats& __instance)

[Info   :  HarmonyX] Running ILHook manipulator on virtual void SE_Stats::Setup(Character character)
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] Patching void Player::OnSpawned() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void ValheimPlus.GameClasses.Player_OnSpawned_Patch::Prefix(Player& __instance)

[Info   :  HarmonyX] Running ILHook manipulator on void Player::OnSpawned()
[Info   :  HarmonyX] Writing prefixes
[Info   :  HarmonyX] Patching void Player::UpdateFood(float dt, bool forceUpdate) with 0 prefixes, 0 postfixes, 1 transpilers, 0 finalizers
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> ValheimPlus.GameClasses.Player_UpdateFood_Transpiler::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

[Info   :  HarmonyX] Running ILHook manipulator on void Player::UpdateFood(float dt, bool forceUpdate)
[Info   :  HarmonyX] Transpiling void Player::UpdateFood(float dt, bool forceUpdate)
[Info   :  HarmonyX] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> ValheimPlus.GameClasses.Player_UpdateFood_Transpiler::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
[Info   :  HarmonyX] Patching bool Player::RemovePiece() with 0 prefixes, 0 postfixes, 1 transpilers, 0 finalizers
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> ValheimPlus.GameClasses.Player_RemovePiece_Transpiler::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

[Info   :  HarmonyX] Running ILHook manipulator on bool Player::RemovePiece()
[Info   :  HarmonyX] Transpiling bool Player::RemovePiece()
[Info   :  HarmonyX] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> ValheimPlus.GameClasses.Player_RemovePiece_Transpiler::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
[Info   :  HarmonyX] Patching void Player::GetTotalFoodValue(Single& hp, Single& stamina) with 0 prefixes, 0 postfixes, 1 transpilers, 0 finalizers
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> ValheimPlus.GameClasses.Player_GetTotalFoodValue_Transpiler::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

[Info   :  HarmonyX] Running ILHook manipulator on void Player::GetTotalFoodValue(Single& hp, Single& stamina)
[Info   :  HarmonyX] Transpiling void Player::GetTotalFoodValue(Single& hp, Single& stamina)
[Info   :  HarmonyX] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> ValheimPlus.GameClasses.Player_GetTotalFoodValue_Transpiler::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
[Info   :  HarmonyX] Patching virtual void Player::UseStamina(float v) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void ValheimPlus.GameClasses.Player_UseStamina_Patch::Prefix(Player& __instance, Single& v)

[Info   :  HarmonyX] Running ILHook manipulator on virtual void Player::UseStamina(float v)
[Info   :  HarmonyX] Writing prefixes
[Info   :  HarmonyX] Patching void Player::UpdatePlacementGhost(bool flashGuardStone) with 1 prefixes, 2 postfixes, 1 transpilers, 0 finalizers
1 prefixes:
* static bool ValheimPlus.GameClasses.Player_UpdatePlacementGhost_Patch::Prefix(Player& __instance, bool flashGuardStone)
2 postfixes:
* static void ValheimPlus.FreePlacementRotation+ModifyPlacingRestrictionOfGhost::Postfix(Player __instance, bool flashGuardStone)
* static void ValheimPlus.GameClasses.Player_UpdatePlacementGhost_Patch::Postfix(Player& __instance)
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> FarmGrid.Patches.FarmGrid_Patch::UpdatePlacementGhost(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

[Info   :  HarmonyX] Running ILHook manipulator on void Player::UpdatePlacementGhost(bool flashGuardStone)
[Info   :  HarmonyX] Transpiling void Player::UpdatePlacementGhost(bool flashGuardStone)
[Info   :  HarmonyX] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> FarmGrid.Patches.FarmGrid_Patch::UpdatePlacementGhost(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
[Info   :  HarmonyX] Writing prefixes
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] Patching void Player::UpdatePlacement(bool takeInput, float dt) with 0 prefixes, 1 postfixes, 1 transpilers, 0 finalizers
1 postfixes:
* static void ValheimPlus.FreePlacementRotation+ModifyPUpdatePlacement::Postfix(Player __instance, bool takeInput, float dt)
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> ValheimPlus.GameClasses.AreaRepair+Player_UpdatePlacement_Transpiler::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

[Info   :  HarmonyX] Running ILHook manipulator on void Player::UpdatePlacement(bool takeInput, float dt)
[Info   :  HarmonyX] Transpiling void Player::UpdatePlacement(bool takeInput, float dt)
[Info   :  HarmonyX] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> ValheimPlus.GameClasses.AreaRepair+Player_UpdatePlacement_Transpiler::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] Patching void Player::Repair(ItemDrop+ItemData toolItem, Piece repairPiece) with 0 prefixes, 0 postfixes, 1 transpilers, 0 finalizers
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> ValheimPlus.GameClasses.AreaRepair+Player_Repair_Transpiler::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

[Info   :  HarmonyX] Running ILHook manipulator on void Player::Repair(ItemDrop+ItemData toolItem, Piece repairPiece)
[Info   :  HarmonyX] Transpiling void Player::Repair(ItemDrop+ItemData toolItem, Piece repairPiece)
[Info   :  HarmonyX] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> ValheimPlus.GameClasses.AreaRepair+Player_Repair_Transpiler::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
[Info   :  HarmonyX] Patching void Player::Update() with 0 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
2 postfixes:
* static void ValheimPlus.GameClasses.Player_Update_Patch::Postfix(Player& __instance, UnityEngine.Vector3& ___m_moveDir, UnityEngine.Vector3& ___m_lookDir, UnityEngine.GameObject& ___m_placementGhost, UnityEngine.Transform ___m_eye)
* static void ValheimPlus.GameClasses.GridAlignment::Postfix(Player& __instance)

[Info   :  HarmonyX] Running ILHook manipulator on void Player::Update()
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] Patching void Player::SetGuardianPower(string name) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void ValheimPlus.GameClasses.Player_SetGuardianPower_Patch::Postfix(Player& __instance)

[Info   :  HarmonyX] Running ILHook manipulator on void Player::SetGuardianPower(string name)
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] Patching bool Player::StartGuardianPower() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool ValheimPlus.GameClasses.Player_StartGuardianPower_Patch::Prefix(Player& __instance, Boolean& __result)

[Info   :  HarmonyX] Running ILHook manipulator on bool Player::StartGuardianPower()
[Info   :  HarmonyX] Writing prefixes
[Info   :  HarmonyX] Patching bool Player::HaveRequirements(Piece+Requirement[] resources, bool discover, int qualityLevel) with 0 prefixes, 0 postfixes, 1 transpilers, 0 finalizers
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> ValheimPlus.GameClasses.Player_HaveRequirements_Transpiler::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

[Info   :  HarmonyX] Running ILHook manipulator on bool Player::HaveRequirements(Piece+Requirement[] resources, bool discover, int qualityLevel)
[Info   :  HarmonyX] Transpiling bool Player::HaveRequirements(Piece+Requirement[] resources, bool discover, int qualityLevel)
[Info   :  HarmonyX] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> ValheimPlus.GameClasses.Player_HaveRequirements_Transpiler::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
[Info   :  HarmonyX] Patching bool Player::HaveRequirements(Piece piece, Player+RequirementMode mode) with 0 prefixes, 0 postfixes, 1 transpilers, 0 finalizers
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> ValheimPlus.GameClasses.Player_HaveRequirements_2_Transpiler::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

[Info   :  HarmonyX] Running ILHook manipulator on bool Player::HaveRequirements(Piece piece, Player+RequirementMode mode)
[Info   :  HarmonyX] Transpiling bool Player::HaveRequirements(Piece piece, Player+RequirementMode mode)
[Info   :  HarmonyX] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> ValheimPlus.GameClasses.Player_HaveRequirements_2_Transpiler::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
[Info   :  HarmonyX] Patching void Player::ConsumeResources(Piece+Requirement[] requirements, int qualityLevel) with 0 prefixes, 0 postfixes, 1 transpilers, 0 finalizers
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> ValheimPlus.GameClasses.Player_ConsumeResources_Transpiler::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

[Info   :  HarmonyX] Running ILHook manipulator on void Player::ConsumeResources(Piece+Requirement[] requirements, int qualityLevel)
[Info   :  HarmonyX] Transpiling void Player::ConsumeResources(Piece+Requirement[] requirements, int qualityLevel)
[Info   :  HarmonyX] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> ValheimPlus.GameClasses.Player_ConsumeResources_Transpiler::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
[Info   :  HarmonyX] Patching virtual bool Player::ToggleEquiped(ItemDrop+ItemData item) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void ValheimPlus.GameClasses.Player_ToggleEquiped_Patch::Postfix(Player __instance, bool __result, ItemDrop+ItemData item)

[Info   :  HarmonyX] Running ILHook manipulator on virtual bool Player::ToggleEquiped(ItemDrop+ItemData item)
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] Patching virtual void Player::FixedUpdate() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void ValheimPlus.GameClasses.Player_FixedUpdate_Patch::Postfix(Player __instance)

[Info   :  HarmonyX] Running ILHook manipulator on virtual void Player::FixedUpdate()
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] Patching bool Player::HaveSeenTutorial(string name) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void ValheimPlus.GameClasses.Player_HaveSeenTutorial_Patch::Prefix(Player __instance, String& name)

[Info   :  HarmonyX] Running ILHook manipulator on bool Player::HaveSeenTutorial(string name)
[Info   :  HarmonyX] Writing prefixes
[Info   :  HarmonyX] Patching virtual bool Player::IsEncumbered() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void ValheimPlus.GameClasses.Player_IsEncumbered_Patch::Postfix(Boolean& __result)

[Info   :  HarmonyX] Running ILHook manipulator on virtual bool Player::IsEncumbered()
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] Patching void Player::AutoPickup(float dt) with 0 prefixes, 0 postfixes, 1 transpilers, 0 finalizers
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> ValheimPlus.GameClasses.Player_AutoPickup_Transpiler::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

[Info   :  HarmonyX] Running ILHook manipulator on void Player::AutoPickup(float dt)
[Info   :  HarmonyX] Transpiling void Player::AutoPickup(float dt)
[Info   :  HarmonyX] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> ValheimPlus.GameClasses.Player_AutoPickup_Transpiler::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
[Info   :  HarmonyX] Patching void Game::Start() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void ValheimPlus.GameClasses.Game_Start_Patch::Prefix()

[Info   :  HarmonyX] Running ILHook manipulator on void Game::Start()
[Info   :  HarmonyX] Writing prefixes
[Info   :  HarmonyX] Patching float Game::GetDifficultyDamageScalePlayer(UnityEngine.Vector3 pos) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void ValheimPlus.GameClasses.Game_GetDifficultyDamageScale_Patch::Postfix(Single& __result)

[Info   :  HarmonyX] Running ILHook manipulator on float Game::GetDifficultyDamageScalePlayer(UnityEngine.Vector3 pos)
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] Patching void Game::UpdateRespawn(float dt) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void ValheimPlus.GameClasses.Game_UpdateRespawn_Patch::Prefix(Game& __instance, float dt)

[Info   :  HarmonyX] Running ILHook manipulator on void Game::UpdateRespawn(float dt)
[Info   :  HarmonyX] Writing prefixes
[Info   :  HarmonyX] Patching float Game::GetDifficultyDamageScaleEnemy(UnityEngine.Vector3 pos) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void ValheimPlus.GameClasses.Game_GetDifficultyHealthScale_Patch::Postfix(Single& __result)

[Info   :  HarmonyX] Running ILHook manipulator on float Game::GetDifficultyDamageScaleEnemy(UnityEngine.Vector3 pos)
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] Patching int Game::GetPlayerDifficulty(UnityEngine.Vector3 pos) with 0 prefixes, 1 postfixes, 1 transpilers, 0 finalizers
1 postfixes:
* static void ValheimPlus.GameClasses.Game_GetPlayerDifficulty_Patch::Postfix(Int32& __result)
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> ValheimPlus.GameClasses.Game_GetPlayerDifficulty_Patch::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

[Info   :  HarmonyX] Running ILHook manipulator on int Game::GetPlayerDifficulty(UnityEngine.Vector3 pos)
[Info   :  HarmonyX] Transpiling int Game::GetPlayerDifficulty(UnityEngine.Vector3 pos)
[Info   :  HarmonyX] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> ValheimPlus.GameClasses.Game_GetPlayerDifficulty_Patch::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] Patching static void Steamworks.SteamGameServer::SetMaxPlayerCount(int cPlayersMax) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void ValheimPlus.GameClasses.ChangeSteamServerVariables::Prefix(Int32& cPlayersMax)

[Info   :  HarmonyX] Running ILHook manipulator on static void Steamworks.SteamGameServer::SetMaxPlayerCount(int cPlayersMax)
[Info   :  HarmonyX] Writing prefixes
[Info   :  HarmonyX] Reverse patching static void ValheimPlus.GameClasses.HookExplore::call_Explore(object instance, UnityEngine.Vector3 p, float radius) with void Minimap::Explore(UnityEngine.Vector3 p, float radius)

[Info   :  HarmonyX] Patching void Minimap::UpdateExplore(float dt, Player player) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void ValheimPlus.GameClasses.ChangeMapBehavior::Prefix(Single& dt, Player& player, Minimap& __instance, Single& ___m_exploreTimer, Single& ___m_exploreInterval)

[Info   :  HarmonyX] Running ILHook manipulator on void Minimap::UpdateExplore(float dt, Player player)
[Info   :  HarmonyX] Writing prefixes
[Info   :  HarmonyX] Patching void Minimap::Awake() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void ValheimPlus.GameClasses.MinimapAwake::Postfix()

[Info   :  HarmonyX] Running ILHook manipulator on void Minimap::Awake()
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] Patching Minimap+PinData Minimap::AddPin(UnityEngine.Vector3 pos, Minimap+PinType type, string name, bool save, bool isChecked, long ownerID) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void ValheimPlus.GameClasses.MapPinEditor_Patches+Minimap_AddPin_Patch::Postfix(Minimap& __instance, Minimap+PinData& __result)

[Info   :  HarmonyX] Running ILHook manipulator on Minimap+PinData Minimap::AddPin(UnityEngine.Vector3 pos, Minimap+PinType type, string name, bool save, bool isChecked, long ownerID)
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] Patching void Minimap::OnDestroy() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void ValheimPlus.GameClasses.displayCartsAndBoatsOnMap+Minimap_OnDestroy_Patch::Postfix()

[Info   :  HarmonyX] Running ILHook manipulator on void Minimap::OnDestroy()
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] Patching void Minimap::UpdateMap(Player player, float dt, bool takeInput) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void ValheimPlus.GameClasses.displayCartsAndBoatsOnMap+Minimap_UpdateMap_Patch::Postfix(Minimap& __instance, Player player, float dt, bool takeInput)

[Info   :  HarmonyX] Running ILHook manipulator on void Minimap::UpdateMap(Player player, float dt, bool takeInput)
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] Patching void Smelter::Awake() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void ValheimPlus.GameClasses.Smelter_Awake_Patch::Prefix(Smelter& __instance)

[Info   :  HarmonyX] Running ILHook manipulator on void Smelter::Awake()
[Info   :  HarmonyX] Writing prefixes
[Info   :  HarmonyX] Patching void Smelter::Spawn(string ore, int stack) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool ValheimPlus.GameClasses.Smelter_Spawn_Patch::Prefix(string ore, int stack, Smelter& __instance)

[Info   :  HarmonyX] Running ILHook manipulator on void Smelter::Spawn(string ore, int stack)
[Info   :  HarmonyX] Writing prefixes
[Info   :  HarmonyX] Patching void Smelter::UpdateSmelter() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void ValheimPlus.GameClasses.Smelter_UpdateSmelter_Patch::Prefix(Smelter __instance)

[Info   :  HarmonyX] Running ILHook manipulator on void Smelter::UpdateSmelter()
[Info   :  HarmonyX] Writing prefixes
[Info   :  HarmonyX] Patching ItemDrop+ItemData Smelter::FindCookableItem(Inventory inventory) with 0 prefixes, 0 postfixes, 1 transpilers, 0 finalizers
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> ValheimPlus.GameClasses.Smelter_FindCookableItem_Transpiler::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

[Info   :  HarmonyX] Running ILHook manipulator on ItemDrop+ItemData Smelter::FindCookableItem(Inventory inventory)
[Info   :  HarmonyX] Transpiling ItemDrop+ItemData Smelter::FindCookableItem(Inventory inventory)
[Info   :  HarmonyX] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> ValheimPlus.GameClasses.Smelter_FindCookableItem_Transpiler::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
[Info   :  HarmonyX] Patching void Smelter::UpdateSmelter() with 1 prefixes, 0 postfixes, 1 transpilers, 0 finalizers
1 prefixes:
* static void ValheimPlus.GameClasses.Smelter_UpdateSmelter_Patch::Prefix(Smelter __instance)
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> ValheimPlus.GameClasses.Smelter_UpdaterSmelter_Transpiler::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

[Info   :  HarmonyX] Running ILHook manipulator on void Smelter::UpdateSmelter()
[Info   :  HarmonyX] Transpiling void Smelter::UpdateSmelter()
[Info   :  HarmonyX] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> ValheimPlus.GameClasses.Smelter_UpdaterSmelter_Transpiler::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
[Info   :  HarmonyX] Writing prefixes
[Info   :  HarmonyX] Patching static string Version::GetVersionString() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void ValheimPlus.GameClasses.VersionInfo+Version_GetVersionString_Patch::Postfix(String& __result)

[Info   :  HarmonyX] Running ILHook manipulator on static string Version::GetVersionString()
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] Patching void Vagon::UpdateMass() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool ValheimPlus.GameClasses.WagonModifications+ModifyWagonMass::Prefix(Vagon& __instance)

[Info   :  HarmonyX] Running ILHook manipulator on void Vagon::UpdateMass()
[Info   :  HarmonyX] Writing prefixes
[Info   :  HarmonyX] Patching bool WearNTear::HaveRoof() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void ValheimPlus.GameClasses.RemoveWearNTear::Postfix(Boolean& __result)

[Info   :  HarmonyX] Running ILHook manipulator on bool WearNTear::HaveRoof()
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] Patching bool WearNTear::IsUnderWater() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void ValheimPlus.GameClasses.RemoveWearNTearFromUnderWater::Postfix(Boolean& __result)

[Info   :  HarmonyX] Running ILHook manipulator on bool WearNTear::IsUnderWater()
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] Patching bool WearNTear::HaveSupport() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void ValheimPlus.GameClasses.WearNTear_HaveSupport_Patch::Postfix(Boolean& __result)

[Info   :  HarmonyX] Running ILHook manipulator on bool WearNTear::HaveSupport()
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] Patching bool WearNTear::ApplyDamage(float damage) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool ValheimPlus.GameClasses.WearNTear_ApplyDamage_Patch::Prefix(WearNTear& __instance, Single& damage)

[Info   :  HarmonyX] Running ILHook manipulator on bool WearNTear::ApplyDamage(float damage)
[Info   :  HarmonyX] Writing prefixes
[Info   :  HarmonyX] Patching void WearNTear::GetMaterialProperties(Single& maxSupport, Single& minSupport, Single& horizontalLoss, Single& verticalLoss) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool ValheimPlus.GameClasses.RemoveStructualIntegrity::Prefix(WearNTear& __instance, Single& maxSupport, Single& minSupport, Single& horizontalLoss, Single& verticalLoss)

[Info   :  HarmonyX] Running ILHook manipulator on void WearNTear::GetMaterialProperties(Single& maxSupport, Single& minSupport, Single& horizontalLoss, Single& verticalLoss)
[Info   :  HarmonyX] Writing prefixes
[Info   :  HarmonyX] Patching void EnvMan::SetEnv(EnvSetup env, float dayInt, float nightInt, float morningInt, float eveningInt, float dt) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void ValheimPlus.GameClasses.EnvMan_SetEnv_Patch::Prefix(EnvMan& __instance, EnvSetup& env)

[Info   :  HarmonyX] Running ILHook manipulator on void EnvMan::SetEnv(EnvSetup env, float dayInt, float nightInt, float morningInt, float eveningInt, float dt)
[Info   :  HarmonyX] Writing prefixes
[Info   :  HarmonyX] Patching void EnvMan::SetParticleArrayEnabled(UnityEngine.GameObject[] psystems, bool enabled) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void ValheimPlus.GameClasses.EnvMan_SetParticleArrayEnabled_Patch::Postfix(MistEmitter& __instance, UnityEngine.GameObject[] psystems, bool enabled)

[Info   :  HarmonyX] Running ILHook manipulator on void EnvMan::SetParticleArrayEnabled(UnityEngine.GameObject[] psystems, bool enabled)
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] Patching void PrivateArea::Awake() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void ValheimPlus.GameClasses.WardPrivateArea+ModifyWardRange::Prefix(PrivateArea& __instance)

[Info   :  HarmonyX] Running ILHook manipulator on void PrivateArea::Awake()
[Info   :  HarmonyX] Writing prefixes
[Info   :  HarmonyX] Patching void InventoryGui::Show(Container container) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void ValheimPlus.GameClasses.InventoryGui_Show_Patch::Postfix(InventoryGui& __instance)

[Info   :  HarmonyX] Running ILHook manipulator on void InventoryGui::Show(Container container)
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] Patching void InventoryGui::RepairOneItem() with 0 prefixes, 0 postfixes, 1 transpilers, 0 finalizers
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> ValheimPlus.GameClasses.InventoryGui_RepairOneItem_Transpiler::Transpile(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

[Info   :  HarmonyX] Running ILHook manipulator on void InventoryGui::RepairOneItem()
[Info   :  HarmonyX] Transpiling void InventoryGui::RepairOneItem()
[Info   :  HarmonyX] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> ValheimPlus.GameClasses.InventoryGui_RepairOneItem_Transpiler::Transpile(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
[Info   :  HarmonyX] Patching void InventoryGui::UpdateRepair() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void ValheimPlus.GameClasses.InventoryGui_UpdateRepair_Patch::Prefix(InventoryGui __instance)

[Info   :  HarmonyX] Running ILHook manipulator on void InventoryGui::UpdateRepair()
[Info   :  HarmonyX] Writing prefixes
[Info   :  HarmonyX] Patching static bool InventoryGui::SetupRequirement(UnityEngine.Transform elementRoot, Piece+Requirement req, Player player, bool craft, int quality) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool ValheimPlus.GameClasses.InventoryGui_SetupRequirement_Patch::Prefix(UnityEngine.Transform elementRoot, Piece+Requirement req, Player player, bool craft, int quality, Boolean& __result)

[Info   :  HarmonyX] Running ILHook manipulator on static bool InventoryGui::SetupRequirement(UnityEngine.Transform elementRoot, Piece+Requirement req, Player player, bool craft, int quality)
[Info   :  HarmonyX] Writing prefixes
[Info   :  HarmonyX] Patching void CraftingStation::Start() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void ValheimPlus.GameClasses.CraftingStationChanges+WorkbenchRangeIncrease::Prefix(CraftingStation& __instance, Single& ___m_rangeBuild, UnityEngine.GameObject ___m_areaMarker)

[Info   :  HarmonyX] Running ILHook manipulator on void CraftingStation::Start()
[Info   :  HarmonyX] Writing prefixes
[Info   :  HarmonyX] Patching bool CraftingStation::CheckUsable(Player player, bool showMessage) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool ValheimPlus.GameClasses.CraftingStationChanges+WorkbenchRemoveRestrictions::Prefix(CraftingStation& __instance, Player& player, Boolean& showMessage, Boolean& __result)

[Info   :  HarmonyX] Running ILHook manipulator on bool CraftingStation::CheckUsable(Player player, bool showMessage)
[Info   :  HarmonyX] Writing prefixes
[Info   :  HarmonyX] Patching void Character::SetVisible(bool visible) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool ValheimPlus.FirstPerson.VPlusFirstPerson+Character_SetVisible_Patch::Prefix(Character& __instance, bool visible)

[Info   :  HarmonyX] Running ILHook manipulator on void Character::SetVisible(bool visible)
[Info   :  HarmonyX] Writing prefixes
[Info   :  HarmonyX] Patching bool Player::TestGhostClipping(UnityEngine.GameObject ghost, float maxPenetration) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool ValheimPlus.FirstPerson.VPlusFirstPerson+Player_TestGhostClipping_Patch::Prefix()

[Info   :  HarmonyX] Running ILHook manipulator on bool Player::TestGhostClipping(UnityEngine.GameObject ghost, float maxPenetration)
[Info   :  HarmonyX] Writing prefixes
[Info   :  HarmonyX] Patching void GameCamera::Awake() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void ValheimPlus.FirstPerson.VPlusFirstPerson+GameCamera_Awake_Patch::Postfix(GameCamera& __instance)

[Info   :  HarmonyX] Running ILHook manipulator on void GameCamera::Awake()
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] Patching void GameCamera::UpdateCamera(float dt) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void ValheimPlus.GameClasses.BlockCameraScrollInAEM::Prefix(GameCamera __instance)
1 postfixes:
* static void ValheimPlus.FirstPerson.VPlusFirstPerson+GameCamera_Update_Patch::Postfix(GameCamera& __instance, float dt)

[Info   :  HarmonyX] Running ILHook manipulator on void GameCamera::UpdateCamera(float dt)
[Info   :  HarmonyX] Writing prefixes
[Info   :  HarmonyX] Writing postfixes
[Info   :Valheim Plus] ValheimPlus [0.9.9.7] is up to date.
[Info   :   BepInEx] Loading [OdinBanners 1.0.0]
[Info   :  HarmonyX] ### Harmony id=Raelaziel.OdinBanners, version=2.5.5.0, location=D:\SteamLibrary\steamapps\common\Valheim\BepInEx\core\0Harmony.dll, env/clr=4.0.30319.42000, platform=Win32NT, ptrsize:runtime/env=8/Bits64, Windows
### Started from void OdinBanners.OdinBanners::.ctor(), location D:\SteamLibrary\steamapps\common\Valheim\BepInEx\plugins\OdinBanners.dll
### At 2022-02-03 07.52.45
[Info   :  HarmonyX] ### Harmony id=org.bepinex.helpers.PieceManager, version=2.5.5.0, location=D:\SteamLibrary\steamapps\common\Valheim\BepInEx\core\0Harmony.dll, env/clr=4.0.30319.42000, platform=Win32NT, ptrsize:runtime/env=8/Bits64, Windows
### Started from static void PieceManager.PiecePrefabManager::.cctor(), location D:\SteamLibrary\steamapps\common\Valheim\BepInEx\plugins\OdinBanners.dll
### At 2022-02-03 07.52.45
[Info   :  HarmonyX] Patching void FejdStartup::Awake() with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void PieceManager.BuildPiece::Patch_FejdStartup()
1 postfixes:
* static void ValheimPlus.GameClasses.HookServerStart::Postfix(FejdStartup& __instance)

[Info   :  HarmonyX] Running ILHook manipulator on void FejdStartup::Awake()
[Info   :  HarmonyX] Writing prefixes
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] Patching void ZNetScene::Awake() with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void PieceManager.PiecePrefabManager::Patch_ZNetSceneAwake(ZNetScene __instance)
1 postfixes:
* static void CustomTextures.BepInExPlugin+ZNetScene_Awake_Patch::Postfix(ZNetScene __instance, System.Collections.Generic.Dictionary<int, UnityEngine.GameObject> ___m_namedPrefabs)

[Info   :  HarmonyX] Running ILHook manipulator on void ZNetScene::Awake()
[Info   :  HarmonyX] Writing prefixes
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] Patching void ZNetScene::Awake() with 1 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void PieceManager.PiecePrefabManager::Patch_ZNetSceneAwake(ZNetScene __instance)
2 postfixes:
* static void PieceManager.PiecePrefabManager::Patch_ZNetSceneAwakePost(ZNetScene __instance)
* static void CustomTextures.BepInExPlugin+ZNetScene_Awake_Patch::Postfix(ZNetScene __instance, System.Collections.Generic.Dictionary<int, UnityEngine.GameObject> ___m_namedPrefabs)

[Info   :  HarmonyX] Running ILHook manipulator on void ZNetScene::Awake()
[Info   :  HarmonyX] Writing prefixes
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] Patching void ObjectDB::Awake() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void PieceManager.BuildPiece::Patch_ObjectDBInit(ObjectDB __instance)

[Info   :  HarmonyX] Running ILHook manipulator on void ObjectDB::Awake()
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] Patching void ZNet::OnNewConnection(ZNetPeer peer) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void OdinBanners.RegisterAndCheckVersion::Prefix(ZNetPeer peer, ZNet& __instance)

[Info   :  HarmonyX] Running ILHook manipulator on void ZNet::OnNewConnection(ZNetPeer peer)
[Info   :  HarmonyX] Writing prefixes
[Info   :  HarmonyX] Patching void ZNet::RPC_PeerInfo(ZRpc rpc, ZPackage pkg) with 1 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool OdinBanners.VerifyClient::Prefix(ZRpc rpc, ZPackage pkg, ZNet& __instance)
2 postfixes:
* static void ValheimPlus.GameClasses.ConfigServerSync::Postfix(ZNet& __instance)
* static void OdinBanners.VerifyClient::Postfix(ZNet __instance)

[Info   :  HarmonyX] Running ILHook manipulator on void ZNet::RPC_PeerInfo(ZRpc rpc, ZPackage pkg)
[Info   :  HarmonyX] Writing prefixes
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] Patching void FejdStartup::ShowConnectError() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void OdinBanners.ShowConnectionError::Postfix(FejdStartup __instance)

[Info   :  HarmonyX] Running ILHook manipulator on void FejdStartup::ShowConnectError()
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] Patching void ZNet::Disconnect(ZNetPeer peer) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void OdinBanners.RemoveDisconnectedPeerFromVerified::Prefix(ZNetPeer peer, ZNet& __instance)

[Info   :  HarmonyX] Running ILHook manipulator on void ZNet::Disconnect(ZNetPeer peer)
[Info   :  HarmonyX] Writing prefixes
[Info   :  HarmonyX] Patching void ZRpc::HandlePackage(ZPackage package) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void ServerSync.ConfigSync+SnatchCurrentlyHandlingRPC::Prefix(ZRpc __instance)

[Info   :  HarmonyX] Running ILHook manipulator on void ZRpc::HandlePackage(ZPackage package)
[Info   :  HarmonyX] Writing prefixes
[Info   :  HarmonyX] Patching void ZNet::Awake() with 0 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
2 postfixes:
* static void ValheimPlus.GameClasses.ChangeGameServerVariables::Postfix(ZNet& __instance)
* static void ServerSync.ConfigSync+RegisterRPCPatch::Postfix(ZNet __instance)

[Info   :  HarmonyX] Running ILHook manipulator on void ZNet::Awake()
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] Patching void ZNet::OnNewConnection(ZNetPeer peer) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void OdinBanners.RegisterAndCheckVersion::Prefix(ZNetPeer peer, ZNet& __instance)
1 postfixes:
* static void ServerSync.ConfigSync+RegisterClientRPCPatch::Postfix(ZNet __instance, ZNetPeer peer)

[Info   :  HarmonyX] Running ILHook manipulator on void ZNet::OnNewConnection(ZNetPeer peer)
[Info   :  HarmonyX] Writing prefixes
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] Patching void FejdStartup::ShowConnectError() with 0 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
2 postfixes:
* static void OdinBanners.ShowConnectionError::Postfix(FejdStartup __instance)
* static void ServerSync.ConfigSync+ShowConnectionError::Postfix(FejdStartup __instance)

[Info   :  HarmonyX] Running ILHook manipulator on void FejdStartup::ShowConnectError()
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] Patching void ZNet::Shutdown() with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void ValheimPlus.GameClasses.OnErrorLoadOwnIni::Prefix(ZNet& __instance)
1 postfixes:
* static void ServerSync.ConfigSync+ResetConfigsOnShutdown::Postfix()

[Info   :  HarmonyX] Running ILHook manipulator on void ZNet::Shutdown()
[Info   :  HarmonyX] Writing prefixes
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] Patching void ZNet::RPC_PeerInfo(ZRpc rpc, ZPackage pkg) with 2 prefixes, 3 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static void ServerSync.ConfigSync+SendConfigsAfterLogin::Prefix(System.Collections.Generic.Dictionary`2[[System.Reflection.Assembly, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089],[ServerSync.ConfigSync+SendConfigsAfterLogin+BufferingSocket, OdinBanners, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]& __state, ZNet __instance, ZRpc rpc)
* static bool OdinBanners.VerifyClient::Prefix(ZRpc rpc, ZPackage pkg, ZNet& __instance)
3 postfixes:
* static void ValheimPlus.GameClasses.ConfigServerSync::Postfix(ZNet& __instance)
* static void OdinBanners.VerifyClient::Postfix(ZNet __instance)
* static void ServerSync.ConfigSync+SendConfigsAfterLogin::Postfix(System.Collections.Generic.Dictionary<System.Reflection.Assembly, ServerSync.ConfigSync+SendConfigsAfterLogin+BufferingSocket> __state, ZNet __instance, ZRpc rpc)

[Info   :  HarmonyX] Running ILHook manipulator on void ZNet::RPC_PeerInfo(ZRpc rpc, ZPackage pkg)
[Info   :  HarmonyX] Writing prefixes
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] Patching string BepInEx.Configuration.ConfigEntryBase::GetSerializedValue() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool ServerSync.ConfigSync+PreventSavingServerInfo::Prefix(BepInEx.Configuration.ConfigEntryBase __instance, String& __result)

[Info   :  HarmonyX] Running ILHook manipulator on string BepInEx.Configuration.ConfigEntryBase::GetSerializedValue()
[Info   :  HarmonyX] Writing prefixes
[Info   :  HarmonyX] Patching void BepInEx.Configuration.ConfigEntryBase::SetSerializedValue(string value) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool ServerSync.ConfigSync+PreventConfigRereadChangingValues::Prefix(BepInEx.Configuration.ConfigEntryBase __instance, string value)

[Info   :  HarmonyX] Running ILHook manipulator on void BepInEx.Configuration.ConfigEntryBase::SetSerializedValue(string value)
[Info   :  HarmonyX] Writing prefixes
[Info   :   BepInEx] Loading [OdinHorse 1.0.0]
[Info   :  HarmonyX] ### Harmony id=Raelaziel.OdinHorse, version=2.5.5.0, location=D:\SteamLibrary\steamapps\common\Valheim\BepInEx\core\0Harmony.dll, env/clr=4.0.30319.42000, platform=Win32NT, ptrsize:runtime/env=8/Bits64, Windows
### Started from void OdinHorse.OdinHorse::.ctor(), location D:\SteamLibrary\steamapps\common\Valheim\BepInEx\plugins\OdinHorse.dll
### At 2022-02-03 07.52.46
[Info   :  HarmonyX] ### Harmony id=org.bepinex.helpers.CreatureManager, version=2.5.5.0, location=D:\SteamLibrary\steamapps\common\Valheim\BepInEx\core\0Harmony.dll, env/clr=4.0.30319.42000, platform=Win32NT, ptrsize:runtime/env=8/Bits64, Windows
### Started from static void CreatureManager.PrefabManager::.cctor(), location D:\SteamLibrary\steamapps\common\Valheim\BepInEx\plugins\OdinHorse.dll
### At 2022-02-03 07.52.46
[Info   :  HarmonyX] Patching void ZNetScene::Awake() with 2 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static void PieceManager.PiecePrefabManager::Patch_ZNetSceneAwake(ZNetScene __instance)
* static void CreatureManager.PrefabManager::Patch_ZNetSceneAwake(ZNetScene __instance)
2 postfixes:
* static void PieceManager.PiecePrefabManager::Patch_ZNetSceneAwakePost(ZNetScene __instance)
* static void CustomTextures.BepInExPlugin+ZNetScene_Awake_Patch::Postfix(ZNetScene __instance, System.Collections.Generic.Dictionary<int, UnityEngine.GameObject> ___m_namedPrefabs)

[Info   :  HarmonyX] Running ILHook manipulator on void ZNetScene::Awake()
[Info   :  HarmonyX] Writing prefixes
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] Patching void ZNetScene::Awake() with 2 prefixes, 3 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static void PieceManager.PiecePrefabManager::Patch_ZNetSceneAwake(ZNetScene __instance)
* static void CreatureManager.PrefabManager::Patch_ZNetSceneAwake(ZNetScene __instance)
3 postfixes:
* static void PieceManager.PiecePrefabManager::Patch_ZNetSceneAwakePost(ZNetScene __instance)
* static void CreatureManager.Creature+DropList::AddDropsToCreature(ZNetScene __instance)
* static void CustomTextures.BepInExPlugin+ZNetScene_Awake_Patch::Postfix(ZNetScene __instance, System.Collections.Generic.Dictionary<int, UnityEngine.GameObject> ___m_namedPrefabs)

[Info   :  HarmonyX] Running ILHook manipulator on void ZNetScene::Awake()
[Info   :  HarmonyX] Writing prefixes
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] Patching void SpawnSystem::Awake() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CreatureManager.Creature::AddToSpawnSystem(SpawnSystem __instance)

[Info   :  HarmonyX] Running ILHook manipulator on void SpawnSystem::Awake()
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] ### Harmony id=org.bepinex.helpers.ItemManager, version=2.5.5.0, location=D:\SteamLibrary\steamapps\common\Valheim\BepInEx\core\0Harmony.dll, env/clr=4.0.30319.42000, platform=Win32NT, ptrsize:runtime/env=8/Bits64, Windows
### Started from static void ItemManager.PrefabManager::.cctor(), location D:\SteamLibrary\steamapps\common\Valheim\BepInEx\plugins\OdinHorse.dll
### At 2022-02-03 07.52.47
[Info   :  HarmonyX] Patching void ObjectDB::CopyOtherDB(ObjectDB other) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void ItemManager.PrefabManager::Patch_ObjectDBInit(ObjectDB __instance)

[Info   :  HarmonyX] Running ILHook manipulator on void ObjectDB::CopyOtherDB(ObjectDB other)
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] Patching void ObjectDB::Awake() with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void ItemManager.PrefabManager::Patch_ObjectDBInit(ObjectDB __instance)
1 postfixes:
* static void PieceManager.BuildPiece::Patch_ObjectDBInit(ObjectDB __instance)

[Info   :  HarmonyX] Running ILHook manipulator on void ObjectDB::Awake()
[Info   :  HarmonyX] Writing prefixes
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] Patching void ObjectDB::CopyOtherDB(ObjectDB other) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void ItemManager.Item::Patch_ObjectDBInit(ObjectDB __instance)
1 postfixes:
* static void ItemManager.PrefabManager::Patch_ObjectDBInit(ObjectDB __instance)

[Info   :  HarmonyX] Running ILHook manipulator on void ObjectDB::CopyOtherDB(ObjectDB other)
[Info   :  HarmonyX] Writing prefixes
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] Patching void ObjectDB::Awake() with 2 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static void ItemManager.PrefabManager::Patch_ObjectDBInit(ObjectDB __instance)
* static void ItemManager.Item::Patch_ObjectDBInit(ObjectDB __instance)
1 postfixes:
* static void PieceManager.BuildPiece::Patch_ObjectDBInit(ObjectDB __instance)

[Info   :  HarmonyX] Running ILHook manipulator on void ObjectDB::Awake()
[Info   :  HarmonyX] Writing prefixes
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] Patching void FejdStartup::Awake() with 2 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static void PieceManager.BuildPiece::Patch_FejdStartup()
* static void ItemManager.Item::Patch_FejdStartup()
1 postfixes:
* static void ValheimPlus.GameClasses.HookServerStart::Postfix(FejdStartup& __instance)

[Info   :  HarmonyX] Running ILHook manipulator on void FejdStartup::Awake()
[Info   :  HarmonyX] Writing prefixes
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] Patching void ZNetScene::Awake() with 3 prefixes, 3 postfixes, 0 transpilers, 0 finalizers
3 prefixes:
* static void PieceManager.PiecePrefabManager::Patch_ZNetSceneAwake(ZNetScene __instance)
* static void CreatureManager.PrefabManager::Patch_ZNetSceneAwake(ZNetScene __instance)
* static void ItemManager.PrefabManager::Patch_ZNetSceneAwake(ZNetScene __instance)
3 postfixes:
* static void PieceManager.PiecePrefabManager::Patch_ZNetSceneAwakePost(ZNetScene __instance)
* static void CreatureManager.Creature+DropList::AddDropsToCreature(ZNetScene __instance)
* static void CustomTextures.BepInExPlugin+ZNetScene_Awake_Patch::Postfix(ZNetScene __instance, System.Collections.Generic.Dictionary<int, UnityEngine.GameObject> ___m_namedPrefabs)

[Info   :  HarmonyX] Running ILHook manipulator on void ZNetScene::Awake()
[Info   :  HarmonyX] Writing prefixes
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] Patching void InventoryGui::UpdateRecipe(Player player, float dt) with 0 prefixes, 0 postfixes, 1 transpilers, 0 finalizers
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> ItemManager.Item::Transpile_InventoryGui(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

[Info   :  HarmonyX] Running ILHook manipulator on void InventoryGui::UpdateRecipe(Player player, float dt)
[Info   :  HarmonyX] Transpiling void InventoryGui::UpdateRecipe(Player player, float dt)
[Info   :  HarmonyX] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> ItemManager.Item::Transpile_InventoryGui(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
[Info   :  HarmonyX] Patching int Recipe::GetRequiredStationLevel(int quality) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void ItemManager.Item::Patch_MaximumRequiredStationLevel(Recipe __instance, Int32& __result, int quality)

[Info   :  HarmonyX] Running ILHook manipulator on int Recipe::GetRequiredStationLevel(int quality)
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] Patching void ObjectDB::CopyOtherDB(ObjectDB other) with 2 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static void ItemManager.Item::Patch_ObjectDBInit(ObjectDB __instance)
* static void Patches+ObjectCopyPatch::Prefix(ObjectDB __instance)
1 postfixes:
* static void ItemManager.PrefabManager::Patch_ObjectDBInit(ObjectDB __instance)

[Info   :  HarmonyX] Running ILHook manipulator on void ObjectDB::CopyOtherDB(ObjectDB other)
[Info   :  HarmonyX] Writing prefixes
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] Patching void ObjectDB::Awake() with 3 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
3 prefixes:
* static void ItemManager.PrefabManager::Patch_ObjectDBInit(ObjectDB __instance)
* static void ItemManager.Item::Patch_ObjectDBInit(ObjectDB __instance)
* static void Patches+ObjectAwakePatch::Prefix(ObjectDB __instance)
1 postfixes:
* static void PieceManager.BuildPiece::Patch_ObjectDBInit(ObjectDB __instance)

[Info   :  HarmonyX] Running ILHook manipulator on void ObjectDB::Awake()
[Info   :  HarmonyX] Writing prefixes
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] Patching virtual bool Tameable::Interact(Humanoid user, bool hold, bool alt) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool Patches+InteractPatch::Prefix(Tameable __instance)

[Info   :  HarmonyX] Running ILHook manipulator on virtual bool Tameable::Interact(Humanoid user, bool hold, bool alt)
[Info   :  HarmonyX] Writing prefixes
[Info   :  HarmonyX] Patching string Tameable::GetHoverText() with 0 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
2 postfixes:
* static void ValheimPlus.GameClasses.Tameable_GetHoverText_Patch::Postfix(Tameable __instance, String& __result)
* static void Patches+HoverTextPatch::Postfix(String& __result, Tameable __instance)

[Info   :  HarmonyX] Running ILHook manipulator on string Tameable::GetHoverText()
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] Patching void MonsterAI::MakeTame() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void Patches+MakeTamePatch::Prefix(MonsterAI __instance)

[Info   :  HarmonyX] Running ILHook manipulator on void MonsterAI::MakeTame()
[Info   :  HarmonyX] Writing prefixes
[Info   :  HarmonyX] Patching void CharacterDrop::OnDeath() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void Patches+DropHorseStuffPatch::Prefix(CharacterDrop __instance)

[Info   :  HarmonyX] Running ILHook manipulator on void CharacterDrop::OnDeath()
[Info   :  HarmonyX] Writing prefixes
[Info   :  HarmonyX] Patching void ZNet::OnNewConnection(ZNetPeer peer) with 2 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static void OdinBanners.RegisterAndCheckVersion::Prefix(ZNetPeer peer, ZNet& __instance)
* static void OdinHorse.RegisterAndCheckVersion::Prefix(ZNetPeer peer, ZNet& __instance)
1 postfixes:
* static void ServerSync.ConfigSync+RegisterClientRPCPatch::Postfix(ZNet __instance, ZNetPeer peer)

[Info   :  HarmonyX] Running ILHook manipulator on void ZNet::OnNewConnection(ZNetPeer peer)
[Info   :  HarmonyX] Writing prefixes
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] Patching void ZNet::RPC_PeerInfo(ZRpc rpc, ZPackage pkg) with 3 prefixes, 4 postfixes, 0 transpilers, 0 finalizers
3 prefixes:
* static void ServerSync.ConfigSync+SendConfigsAfterLogin::Prefix(System.Collections.Generic.Dictionary`2[[System.Reflection.Assembly, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089],[ServerSync.ConfigSync+SendConfigsAfterLogin+BufferingSocket, OdinBanners, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]& __state, ZNet __instance, ZRpc rpc)
* static bool OdinBanners.VerifyClient::Prefix(ZRpc rpc, ZPackage pkg, ZNet& __instance)
* static bool OdinHorse.VerifyClient::Prefix(ZRpc rpc, ZPackage pkg, ZNet& __instance)
4 postfixes:
* static void ValheimPlus.GameClasses.ConfigServerSync::Postfix(ZNet& __instance)
* static void OdinBanners.VerifyClient::Postfix(ZNet __instance)
* static void ServerSync.ConfigSync+SendConfigsAfterLogin::Postfix(System.Collections.Generic.Dictionary<System.Reflection.Assembly, ServerSync.ConfigSync+SendConfigsAfterLogin+BufferingSocket> __state, ZNet __instance, ZRpc rpc)
* static void OdinHorse.VerifyClient::Postfix(ZNet __instance)

[Info   :  HarmonyX] Running ILHook manipulator on void ZNet::RPC_PeerInfo(ZRpc rpc, ZPackage pkg)
[Info   :  HarmonyX] Writing prefixes
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] Patching void FejdStartup::ShowConnectError() with 0 prefixes, 3 postfixes, 0 transpilers, 0 finalizers
3 postfixes:
* static void OdinBanners.ShowConnectionError::Postfix(FejdStartup __instance)
* static void ServerSync.ConfigSync+ShowConnectionError::Postfix(FejdStartup __instance)
* static void OdinHorse.ShowConnectionError::Postfix(FejdStartup __instance)

[Info   :  HarmonyX] Running ILHook manipulator on void FejdStartup::ShowConnectError()
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] Patching void ZNet::Disconnect(ZNetPeer peer) with 2 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static void OdinBanners.RemoveDisconnectedPeerFromVerified::Prefix(ZNetPeer peer, ZNet& __instance)
* static void OdinHorse.RemoveDisconnectedPeerFromVerified::Prefix(ZNetPeer peer, ZNet& __instance)

[Info   :  HarmonyX] Running ILHook manipulator on void ZNet::Disconnect(ZNetPeer peer)
[Info   :  HarmonyX] Writing prefixes
[Info   :  HarmonyX] Patching void ZRpc::HandlePackage(ZPackage package) with 2 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static void ServerSync.ConfigSync+SnatchCurrentlyHandlingRPC::Prefix(ZRpc __instance)
* static void ServerSync.ConfigSync+SnatchCurrentlyHandlingRPC::Prefix(ZRpc __instance)

[Info   :  HarmonyX] Running ILHook manipulator on void ZRpc::HandlePackage(ZPackage package)
[Info   :  HarmonyX] Writing prefixes
[Info   :  HarmonyX] Patching void ZNet::Awake() with 0 prefixes, 3 postfixes, 0 transpilers, 0 finalizers
3 postfixes:
* static void ValheimPlus.GameClasses.ChangeGameServerVariables::Postfix(ZNet& __instance)
* static void ServerSync.ConfigSync+RegisterRPCPatch::Postfix(ZNet __instance)
* static void ServerSync.ConfigSync+RegisterRPCPatch::Postfix(ZNet __instance)

[Info   :  HarmonyX] Running ILHook manipulator on void ZNet::Awake()
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] Patching void ZNet::OnNewConnection(ZNetPeer peer) with 2 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static void OdinBanners.RegisterAndCheckVersion::Prefix(ZNetPeer peer, ZNet& __instance)
* static void OdinHorse.RegisterAndCheckVersion::Prefix(ZNetPeer peer, ZNet& __instance)
2 postfixes:
* static void ServerSync.ConfigSync+RegisterClientRPCPatch::Postfix(ZNet __instance, ZNetPeer peer)
* static void ServerSync.ConfigSync+RegisterClientRPCPatch::Postfix(ZNet __instance, ZNetPeer peer)

[Info   :  HarmonyX] Running ILHook manipulator on void ZNet::OnNewConnection(ZNetPeer peer)
[Info   :  HarmonyX] Writing prefixes
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] Patching void FejdStartup::ShowConnectError() with 0 prefixes, 4 postfixes, 0 transpilers, 0 finalizers
4 postfixes:
* static void OdinBanners.ShowConnectionError::Postfix(FejdStartup __instance)
* static void ServerSync.ConfigSync+ShowConnectionError::Postfix(FejdStartup __instance)
* static void OdinHorse.ShowConnectionError::Postfix(FejdStartup __instance)
* static void ServerSync.ConfigSync+ShowConnectionError::Postfix(FejdStartup __instance)

[Info   :  HarmonyX] Running ILHook manipulator on void FejdStartup::ShowConnectError()
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] Patching void ZNet::Shutdown() with 1 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void ValheimPlus.GameClasses.OnErrorLoadOwnIni::Prefix(ZNet& __instance)
2 postfixes:
* static void ServerSync.ConfigSync+ResetConfigsOnShutdown::Postfix()
* static void ServerSync.ConfigSync+ResetConfigsOnShutdown::Postfix()

[Info   :  HarmonyX] Running ILHook manipulator on void ZNet::Shutdown()
[Info   :  HarmonyX] Writing prefixes
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] Patching void ZNet::RPC_PeerInfo(ZRpc rpc, ZPackage pkg) with 4 prefixes, 5 postfixes, 0 transpilers, 0 finalizers
4 prefixes:
* static void ServerSync.ConfigSync+SendConfigsAfterLogin::Prefix(System.Collections.Generic.Dictionary`2[[System.Reflection.Assembly, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089],[ServerSync.ConfigSync+SendConfigsAfterLogin+BufferingSocket, OdinBanners, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]& __state, ZNet __instance, ZRpc rpc)
* static void ServerSync.ConfigSync+SendConfigsAfterLogin::Prefix(System.Collections.Generic.Dictionary`2[[System.Reflection.Assembly, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089],[ServerSync.ConfigSync+SendConfigsAfterLogin+BufferingSocket, OdinHorse, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]& __state, ZNet __instance, ZRpc rpc)
* static bool OdinBanners.VerifyClient::Prefix(ZRpc rpc, ZPackage pkg, ZNet& __instance)
* static bool OdinHorse.VerifyClient::Prefix(ZRpc rpc, ZPackage pkg, ZNet& __instance)
5 postfixes:
* static void ValheimPlus.GameClasses.ConfigServerSync::Postfix(ZNet& __instance)
* static void OdinBanners.VerifyClient::Postfix(ZNet __instance)
* static void ServerSync.ConfigSync+SendConfigsAfterLogin::Postfix(System.Collections.Generic.Dictionary<System.Reflection.Assembly, ServerSync.ConfigSync+SendConfigsAfterLogin+BufferingSocket> __state, ZNet __instance, ZRpc rpc)
* static void OdinHorse.VerifyClient::Postfix(ZNet __instance)
* static void ServerSync.ConfigSync+SendConfigsAfterLogin::Postfix(System.Collections.Generic.Dictionary<System.Reflection.Assembly, ServerSync.ConfigSync+SendConfigsAfterLogin+BufferingSocket> __state, ZNet __instance, ZRpc rpc)

[Info   :  HarmonyX] Running ILHook manipulator on void ZNet::RPC_PeerInfo(ZRpc rpc, ZPackage pkg)
[Info   :  HarmonyX] Writing prefixes
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] Patching string BepInEx.Configuration.ConfigEntryBase::GetSerializedValue() with 2 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static bool ServerSync.ConfigSync+PreventSavingServerInfo::Prefix(BepInEx.Configuration.ConfigEntryBase __instance, String& __result)
* static bool ServerSync.ConfigSync+PreventSavingServerInfo::Prefix(BepInEx.Configuration.ConfigEntryBase __instance, String& __result)

[Info   :  HarmonyX] Running ILHook manipulator on string BepInEx.Configuration.ConfigEntryBase::GetSerializedValue()
[Info   :  HarmonyX] Writing prefixes
[Info   :  HarmonyX] Patching void BepInEx.Configuration.ConfigEntryBase::SetSerializedValue(string value) with 2 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static bool ServerSync.ConfigSync+PreventConfigRereadChangingValues::Prefix(BepInEx.Configuration.ConfigEntryBase __instance, string value)
* static bool ServerSync.ConfigSync+PreventConfigRereadChangingValues::Prefix(BepInEx.Configuration.ConfigEntryBase __instance, string value)

[Info   :  HarmonyX] Running ILHook manipulator on void BepInEx.Configuration.ConfigEntryBase::SetSerializedValue(string value)
[Info   :  HarmonyX] Writing prefixes
[Info   :   BepInEx] Loading [Equipment and Quick Slots 2.0.14]
[Info   :  HarmonyX] ### Harmony id=randyknapp.mods.equipmentandquickslots, version=2.5.5.0, location=D:\SteamLibrary\steamapps\common\Valheim\BepInEx\core\0Harmony.dll, env/clr=4.0.30319.42000, platform=Win32NT, ptrsize:runtime/env=8/Bits64, Windows
### Started from void EquipmentAndQuickSlots.EquipmentAndQuickSlots::Awake(), location D:\SteamLibrary\steamapps\common\Valheim\BepInEx\plugins\EquipmentAndQuickSlots.dll
### At 2022-02-03 07.52.47
[Info   :  HarmonyX] Patching static void Terminal::InitTerminal() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void EquipmentAndQuickSlots.Terminal_Patch::Postfix()

[Info   :  HarmonyX] Running ILHook manipulator on static void Terminal::InitTerminal()
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] Patching void HotkeyBar::UpdateIcons(Player player) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool EquipmentAndQuickSlots.CustomHotkeyBar+HotkeyBar_UpdateIcons_Patch::Prefix(HotkeyBar __instance, Player player)
1 postfixes:
* static void ValheimPlus.UI.HotkeyBar_UpdateIcons_Patch::Postfix(HotkeyBar& __instance, Player& player)

[Info   :  HarmonyX] Running ILHook manipulator on void HotkeyBar::UpdateIcons(Player player)
[Info   :  HarmonyX] Writing prefixes
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] Patching void Hud::Awake() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void EquipmentAndQuickSlots.Hud_Awake_Patch::Postfix(Hud __instance)

[Info   :  HarmonyX] Running ILHook manipulator on void Hud::Awake()
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] Patching void Hud::Update() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void EquipmentAndQuickSlots.HotkeyBarController+Hud_Update_Patch::Postfix(Hud __instance)

[Info   :  HarmonyX] Running ILHook manipulator on void Hud::Update()
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] Patching void Hud::OnDestroy() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void EquipmentAndQuickSlots.HotkeyBarController+Hud_OnDestroy_Patch::Postfix(Hud __instance)

[Info   :  HarmonyX] Running ILHook manipulator on void Hud::OnDestroy()
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] Patching void HotkeyBar::Update() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool EquipmentAndQuickSlots.HotkeyBar_Update_Patch::Prefix(HotkeyBar __instance)

[Info   :  HarmonyX] Running ILHook manipulator on void HotkeyBar::Update()
[Info   :  HarmonyX] Writing prefixes
[Info   :  HarmonyX] Patching bool Humanoid::EquipItem(ItemDrop+ItemData item, bool triggerEquipEffects) with 1 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool EquipmentAndQuickSlots.EquipmentSlotHelper+Humanoid_EquipItem_Patch::Prefix()
2 postfixes:
* static bool ValheimPlus.GameClasses.Humanoid_EquipItem_Patch::Postfix(bool __result, Humanoid __instance, ItemDrop+ItemData item)
* static void EquipmentAndQuickSlots.EquipmentSlotHelper+Humanoid_EquipItem_Patch::Postfix(Humanoid __instance, bool __result, ItemDrop+ItemData item)

[Info   :  HarmonyX] Running ILHook manipulator on bool Humanoid::EquipItem(ItemDrop+ItemData item, bool triggerEquipEffects)
[Info   :  HarmonyX] Writing prefixes
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] Patching void Humanoid::UnequipItem(ItemDrop+ItemData item, bool triggerEquipEffects) with 0 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
2 postfixes:
* static void ValheimPlus.GameClasses.Humanoid_UnequipItem_Patch::Postfix(Humanoid __instance, ItemDrop+ItemData item)
* static void EquipmentAndQuickSlots.EquipmentSlotHelper+Humanoid_UnequipItem_Patch::Postfix(Humanoid __instance, ItemDrop+ItemData item)

[Info   :  HarmonyX] Running ILHook manipulator on void Humanoid::UnequipItem(ItemDrop+ItemData item, bool triggerEquipEffects)
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] Patching void GuiBar::Awake() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool EquipmentAndQuickSlots.GuiBar_Awake_Patch::Prefix(GuiBar __instance)

[Info   :  HarmonyX] Running ILHook manipulator on void GuiBar::Awake()
[Info   :  HarmonyX] Writing prefixes
[Info   :  HarmonyX] Patching InventoryGrid+Element InventoryGrid::GetElement(int x, int y, int width) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool EquipmentAndQuickSlots.InventoryGrid_GetElement_Patch::Prefix(InventoryGrid __instance, InventoryGrid+Element& __result, int x, int y, int width)

[Info   :  HarmonyX] Running ILHook manipulator on InventoryGrid+Element InventoryGrid::GetElement(int x, int y, int width)
[Info   :  HarmonyX] Writing prefixes
[Info   :  HarmonyX] Patching void InventoryGrid::UpdateGui(Player player, ItemDrop+ItemData dragItem) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void EquipmentAndQuickSlots.InventoryGrid_UpdateGui_Patch::Postfix(InventoryGrid __instance)

[Info   :  HarmonyX] Running ILHook manipulator on void InventoryGrid::UpdateGui(Player player, ItemDrop+ItemData dragItem)
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] Patching void InventoryGui::Awake() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void EquipmentAndQuickSlots.InventoryGui_Patch+InventoryGui_Awake_Patch::Postfix(InventoryGui __instance)

[Info   :  HarmonyX] Running ILHook manipulator on void InventoryGui::Awake()
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] Patching void InventoryGui::UpdateInventory(Player player) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool EquipmentAndQuickSlots.InventoryGui_Patch+InventoryGui_UpdateInventory_Patch::Prefix(InventoryGui __instance, Player player)

[Info   :  HarmonyX] Running ILHook manipulator on void InventoryGui::UpdateInventory(Player player)
[Info   :  HarmonyX] Writing prefixes
[Info   :  HarmonyX] Patching void InventoryGui::UpdateGamepad() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool EquipmentAndQuickSlots.InventoryGui_Patch+InventoryGui_UpdateGamepad_Patch::Prefix(InventoryGui __instance)

[Info   :  HarmonyX] Running ILHook manipulator on void InventoryGui::UpdateGamepad()
[Info   :  HarmonyX] Writing prefixes
[Info   :  HarmonyX] Patching void InventoryGui::UpdateRecipeGamepadInput() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool EquipmentAndQuickSlots.InventoryGui_Patch+InventoryGui_UpdateRecipeGamepadInput_Patch::Prefix(InventoryGui __instance)

[Info   :  HarmonyX] Running ILHook manipulator on void InventoryGui::UpdateRecipeGamepadInput()
[Info   :  HarmonyX] Writing prefixes
[Info   :  HarmonyX] Patching void InventoryGui::DoCrafting(Player player) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool EquipmentAndQuickSlots.InventoryGui_DoCrafting_Patch::Prefix(InventoryGui __instance, Player player, bool __runOriginal)

[Info   :  HarmonyX] Running ILHook manipulator on void InventoryGui::DoCrafting(Player player)
[Info   :  HarmonyX] Writing prefixes
[Info   :  HarmonyX] Patching bool Inventory::CanAddItem(UnityEngine.GameObject prefab, int stack) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool EquipmentAndQuickSlots.Inventory_CanAddItem_Patch::Prefix(Inventory __instance, Boolean& __result, UnityEngine.GameObject prefab, int stack)

[Info   :  HarmonyX] Running ILHook manipulator on bool Inventory::CanAddItem(UnityEngine.GameObject prefab, int stack)
[Info   :  HarmonyX] Writing prefixes
[Info   :  HarmonyX] Patching bool Inventory::CanAddItem(ItemDrop+ItemData item, int stack) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool EquipmentAndQuickSlots.Inventory_CanAddItem2_Patch::Prefix(Inventory __instance, Boolean& __result, ItemDrop+ItemData item, int stack)

[Info   :  HarmonyX] Running ILHook manipulator on bool Inventory::CanAddItem(ItemDrop+ItemData item, int stack)
[Info   :  HarmonyX] Writing prefixes
[Info   :  HarmonyX] Patching bool Inventory::AddItem(ItemDrop+ItemData item) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool EquipmentAndQuickSlots.Inventory_AddItem2_Patch::Prefix(Inventory __instance, Boolean& __result, ItemDrop+ItemData item, Boolean& __state)
1 postfixes:
* static void EquipmentAndQuickSlots.Inventory_AddItem2_Patch::Postfix(bool __state)

[Info   :  HarmonyX] Running ILHook manipulator on bool Inventory::AddItem(ItemDrop+ItemData item)
[Info   :  HarmonyX] Writing prefixes
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] Patching Vector2i Inventory::FindEmptySlot(bool topFirst) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool EquipmentAndQuickSlots.Inventory_FindEmptySlot_Patch::Prefix(Inventory __instance, bool topFirst, Vector2i& __result)

[Info   :  HarmonyX] Running ILHook manipulator on Vector2i Inventory::FindEmptySlot(bool topFirst)
[Info   :  HarmonyX] Writing prefixes
[Info   :  HarmonyX] Patching ItemDrop+ItemData Inventory::FindFreeStackItem(string name, int quality) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool EquipmentAndQuickSlots.Inventory_FindFreeStackItem_Patch::Prefix(Inventory __instance, string name, int quality, ItemDrop+ItemData& __result, Boolean& __state)
1 postfixes:
* static void EquipmentAndQuickSlots.Inventory_FindFreeStackItem_Patch::Postfix(bool __state)

[Info   :  HarmonyX] Running ILHook manipulator on ItemDrop+ItemData Inventory::FindFreeStackItem(string name, int quality)
[Info   :  HarmonyX] Writing prefixes
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] Patching bool Inventory::ContainsItem(ItemDrop+ItemData item) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool EquipmentAndQuickSlots.Inventory_ContainsItem_Patch::Prefix(Inventory __instance, Boolean& __result, ItemDrop+ItemData item)

[Info   :  HarmonyX] Running ILHook manipulator on bool Inventory::ContainsItem(ItemDrop+ItemData item)
[Info   :  HarmonyX] Writing prefixes
[Info   :  HarmonyX] Patching bool Inventory::RemoveOneItem(ItemDrop+ItemData item) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool EquipmentAndQuickSlots.Inventory_RemoveOneItem_Patch::Prefix(Inventory __instance, Boolean& __result, ItemDrop+ItemData item)

[Info   :  HarmonyX] Running ILHook manipulator on bool Inventory::RemoveOneItem(ItemDrop+ItemData item)
[Info   :  HarmonyX] Writing prefixes
[Info   :  HarmonyX] Patching bool Inventory::RemoveItem(ItemDrop+ItemData item) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool EquipmentAndQuickSlots.Inventory_RemoveItem2_Patch::Prefix(Inventory __instance, Boolean& __result, ItemDrop+ItemData item)

[Info   :  HarmonyX] Running ILHook manipulator on bool Inventory::RemoveItem(ItemDrop+ItemData item)
[Info   :  HarmonyX] Writing prefixes
[Info   :  HarmonyX] Patching bool Inventory::RemoveItem(ItemDrop+ItemData item, int amount) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool EquipmentAndQuickSlots.Inventory_RemoveItem3_Patch::Prefix(Inventory __instance, Boolean& __result, ItemDrop+ItemData item, int amount)

[Info   :  HarmonyX] Running ILHook manipulator on bool Inventory::RemoveItem(ItemDrop+ItemData item, int amount)
[Info   :  HarmonyX] Writing prefixes
[Info   :  HarmonyX] Patching void Inventory::RemoveItem(string name, int amount) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool EquipmentAndQuickSlots.Inventory_RemoveItem4_Patch::Prefix(Inventory __instance, string name, int amount)

[Info   :  HarmonyX] Running ILHook manipulator on void Inventory::RemoveItem(string name, int amount)
[Info   :  HarmonyX] Writing prefixes
[Info   :  HarmonyX] Patching bool Inventory::HaveItem(string name) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool EquipmentAndQuickSlots.Inventory_HaveItem_Patch::Prefix(Inventory __instance, Boolean& __result, string name)

[Info   :  HarmonyX] Running ILHook manipulator on bool Inventory::HaveItem(string name)
[Info   :  HarmonyX] Writing prefixes
[Info   :  HarmonyX] Patching void Inventory::GetAllPieceTables(System.Collections.Generic.List<PieceTable> tables) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool EquipmentAndQuickSlots.Inventory_GetAllPieceTables_Patch::Prefix(Inventory __instance, System.Collections.Generic.List<PieceTable> tables)

[Info   :  HarmonyX] Running ILHook manipulator on void Inventory::GetAllPieceTables(System.Collections.Generic.List<PieceTable> tables)
[Info   :  HarmonyX] Writing prefixes
[Info   :  HarmonyX] Patching int Inventory::CountItems(string name) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool EquipmentAndQuickSlots.Inventory_CountItems_Patch::Prefix(Inventory __instance, Int32& __result, string name)

[Info   :  HarmonyX] Running ILHook manipulator on int Inventory::CountItems(string name)
[Info   :  HarmonyX] Writing prefixes
[Info   :  HarmonyX] Patching ItemDrop+ItemData Inventory::GetItem(string name) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool EquipmentAndQuickSlots.Inventory_GetItem2_Patch::Prefix(Inventory __instance, ItemDrop+ItemData& __result, string name)

[Info   :  HarmonyX] Running ILHook manipulator on ItemDrop+ItemData Inventory::GetItem(string name)
[Info   :  HarmonyX] Writing prefixes
[Info   :  HarmonyX] Patching ItemDrop+ItemData Inventory::GetAmmoItem(string ammoName) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool EquipmentAndQuickSlots.Inventory_GetAmmoItem_Patch::Prefix(Inventory __instance, ItemDrop+ItemData& __result, string ammoName)

[Info   :  HarmonyX] Running ILHook manipulator on ItemDrop+ItemData Inventory::GetAmmoItem(string ammoName)
[Info   :  HarmonyX] Writing prefixes
[Info   :  HarmonyX] Patching int Inventory::FindFreeStackSpace(string name) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool EquipmentAndQuickSlots.Inventory_FindFreeStackSpace_Patch::Prefix(Inventory __instance, Int32& __result, string name)

[Info   :  HarmonyX] Running ILHook manipulator on int Inventory::FindFreeStackSpace(string name)
[Info   :  HarmonyX] Writing prefixes
[Info   :  HarmonyX] Patching int Inventory::NrOfItems() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool EquipmentAndQuickSlots.Inventory_NrOfItems_Patch::Prefix(Inventory __instance, Int32& __result)

[Info   :  HarmonyX] Running ILHook manipulator on int Inventory::NrOfItems()
[Info   :  HarmonyX] Writing prefixes
[Info   :  HarmonyX] Patching float Inventory::SlotsUsedPercentage() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool EquipmentAndQuickSlots.Inventory_SlotsUsedPercentage_Patch::Prefix(Inventory __instance, Single& __result)

[Info   :  HarmonyX] Running ILHook manipulator on float Inventory::SlotsUsedPercentage()
[Info   :  HarmonyX] Writing prefixes
[Info   :  HarmonyX] Patching int Inventory::GetEmptySlots() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool EquipmentAndQuickSlots.Inventory_GetEmptySlots_Patch::Prefix(Inventory __instance, Int32& __result)

[Info   :  HarmonyX] Running ILHook manipulator on int Inventory::GetEmptySlots()
[Info   :  HarmonyX] Writing prefixes
[Info   :  HarmonyX] Patching bool Inventory::HaveEmptySlot() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool EquipmentAndQuickSlots.Inventory_HaveEmptySlot_Patch::Prefix(Inventory __instance, Boolean& __result)

[Info   :  HarmonyX] Running ILHook manipulator on bool Inventory::HaveEmptySlot()
[Info   :  HarmonyX] Writing prefixes
[Info   :  HarmonyX] Patching System.Collections.Generic.List<ItemDrop+ItemData> Inventory::GetEquipedtems() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool EquipmentAndQuickSlots.Inventory_GetEquipedtems_Patch::Prefix(Inventory __instance, System.Collections.Generic.List`1[[ItemDrop+ItemData, assembly_valheim, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]& __result)

[Info   :  HarmonyX] Running ILHook manipulator on System.Collections.Generic.List<ItemDrop+ItemData> Inventory::GetEquipedtems()
[Info   :  HarmonyX] Writing prefixes
[Info   :  HarmonyX] Patching void Inventory::GetWornItems(System.Collections.Generic.List<ItemDrop+ItemData> worn) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool EquipmentAndQuickSlots.Inventory_GetWornItems_Patch::Prefix(Inventory __instance, System.Collections.Generic.List<ItemDrop+ItemData> worn)

[Info   :  HarmonyX] Running ILHook manipulator on void Inventory::GetWornItems(System.Collections.Generic.List<ItemDrop+ItemData> worn)
[Info   :  HarmonyX] Writing prefixes
[Info   :  HarmonyX] Patching void Inventory::GetValuableItems(System.Collections.Generic.List<ItemDrop+ItemData> items) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool EquipmentAndQuickSlots.Inventory_GetValuableItems_Patch::Prefix(Inventory __instance, System.Collections.Generic.List<ItemDrop+ItemData> items)

[Info   :  HarmonyX] Running ILHook manipulator on void Inventory::GetValuableItems(System.Collections.Generic.List<ItemDrop+ItemData> items)
[Info   :  HarmonyX] Writing prefixes
[Info   :  HarmonyX] Patching System.Collections.Generic.List<ItemDrop+ItemData> Inventory::GetAllItems() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool EquipmentAndQuickSlots.Inventory_GetAllItems_Patch::Prefix(Inventory __instance, System.Collections.Generic.List`1[[ItemDrop+ItemData, assembly_valheim, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]& __result)

[Info   :  HarmonyX] Running ILHook manipulator on System.Collections.Generic.List<ItemDrop+ItemData> Inventory::GetAllItems()
[Info   :  HarmonyX] Writing prefixes
[Info   :  HarmonyX] Patching void Inventory::GetAllItems(string name, System.Collections.Generic.List<ItemDrop+ItemData> items) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool EquipmentAndQuickSlots.Inventory_GetAllItems2_Patch::Prefix(Inventory __instance, string name, System.Collections.Generic.List<ItemDrop+ItemData> items)

[Info   :  HarmonyX] Running ILHook manipulator on void Inventory::GetAllItems(string name, System.Collections.Generic.List<ItemDrop+ItemData> items)
[Info   :  HarmonyX] Writing prefixes
[Info   :  HarmonyX] Patching void Inventory::GetAllItems(ItemDrop+ItemData+ItemType type, System.Collections.Generic.List<ItemDrop+ItemData> items) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool EquipmentAndQuickSlots.Inventory_GetAllItems3_Patch::Prefix(Inventory __instance, ItemDrop+ItemData+ItemType type, System.Collections.Generic.List<ItemDrop+ItemData> items)

[Info   :  HarmonyX] Running ILHook manipulator on void Inventory::GetAllItems(ItemDrop+ItemData+ItemType type, System.Collections.Generic.List<ItemDrop+ItemData> items)
[Info   :  HarmonyX] Writing prefixes
[Info   :  HarmonyX] Patching void Inventory::UpdateTotalWeight() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool EquipmentAndQuickSlots.Inventory_UpdateTotalWeight_Patch::Prefix(Inventory __instance)

[Info   :  HarmonyX] Running ILHook manipulator on void Inventory::UpdateTotalWeight()
[Info   :  HarmonyX] Writing prefixes
[Info   :  HarmonyX] Patching bool Inventory::IsTeleportable() with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool EquipmentAndQuickSlots.Inventory_IsTeleportable_Patch::Prefix(Inventory __instance, Boolean& __result)
1 postfixes:
* static void ValheimPlus.GameClasses.noItemTeleportPrevention::Postfix(Boolean& __result)

[Info   :  HarmonyX] Running ILHook manipulator on bool Inventory::IsTeleportable()
[Info   :  HarmonyX] Writing prefixes
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] Patching void Player::Save(ZPackage pkg) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool EquipmentAndQuickSlots.Player_Save_Patch::Prefix(Player __instance)

[Info   :  HarmonyX] Running ILHook manipulator on void Player::Save(ZPackage pkg)
[Info   :  HarmonyX] Writing prefixes
[Info   :  HarmonyX] Patching void Player::Load(ZPackage pkg) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void EquipmentAndQuickSlots.Player_Load_Patch::Postfix(Player __instance)

[Info   :  HarmonyX] Running ILHook manipulator on void Player::Load(ZPackage pkg)
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] Patching virtual void Player::Awake() with 0 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
2 postfixes:
* static void ValheimPlus.GameClasses.Player_Awake_Patch::Postfix(Player& __instance)
* static void EquipmentAndQuickSlots.Player_Awake_Patch::Postfix(Player __instance)

[Info   :  HarmonyX] Running ILHook manipulator on virtual void Player::Awake()
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] Patching void Player::CreateTombStone() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void EquipmentAndQuickSlots.Player_CreateTombStone_Patch::Prefix(Player __instance)

[Info   :  HarmonyX] Running ILHook manipulator on void Player::CreateTombStone()
[Info   :  HarmonyX] Writing prefixes
[Info   :  HarmonyX] Patching Player Game::SpawnPlayer(UnityEngine.Vector3 spawnPoint) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void EquipmentAndQuickSlots.Game_SpawnPlayer_Patch::Postfix(Game __instance)

[Info   :  HarmonyX] Running ILHook manipulator on Player Game::SpawnPlayer(UnityEngine.Vector3 spawnPoint)
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] Patching void TombStone::OnTakeAllSuccess() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void EquipmentAndQuickSlots.TombStone_OnTakeAllSuccess_Patch::Postfix()

[Info   :  HarmonyX] Running ILHook manipulator on void TombStone::OnTakeAllSuccess()
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] Patching void TextsDialog::UpdateTextsList() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void EquipmentAndQuickSlots.TextsDialog_UpdateTextsList_Patch::Postfix(TextsDialog __instance)

[Info   :  HarmonyX] Running ILHook manipulator on void TextsDialog::UpdateTextsList()
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] Patching void Container::Load() with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void EquipmentAndQuickSlots.Container_Load_Patch::Prefix(Container __instance, Boolean& __state)
1 postfixes:
* static void EquipmentAndQuickSlots.Container_Load_Patch::Postfix(bool __state)

[Info   :  HarmonyX] Running ILHook manipulator on void Container::Load()
[Info   :  HarmonyX] Writing prefixes
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] Patching bool Inventory::AddItem(ItemDrop+ItemData item, int amount, int x, int y) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void EquipmentAndQuickSlots.Inventory_AddItem_Patch::Prefix(Inventory __instance, int x, int y)

[Info   :  HarmonyX] Running ILHook manipulator on bool Inventory::AddItem(ItemDrop+ItemData item, int amount, int x, int y)
[Info   :  HarmonyX] Writing prefixes
[Info   :   BepInEx] Loading [Bears 0.1.2]
[Info   :  HarmonyX] ### Harmony id=harmony-auto-500b28e3-6331-42ec-a37c-bcbdb10d69ff, version=2.5.5.0, location=D:\SteamLibrary\steamapps\common\Valheim\BepInEx\core\0Harmony.dll, env/clr=4.0.30319.42000, platform=Win32NT, ptrsize:runtime/env=8/Bits64, Windows
### Started from void Bears.Plugin::Awake(), location D:\SteamLibrary\steamapps\common\Valheim\BepInEx\plugins\Bears.dll
### At 2022-02-03 07.52.48
[Info   :  HarmonyX] Patching void ZNetScene::Awake() with 4 prefixes, 3 postfixes, 0 transpilers, 0 finalizers
4 prefixes:
* static void PieceManager.PiecePrefabManager::Patch_ZNetSceneAwake(ZNetScene __instance)
* static void CreatureManager.PrefabManager::Patch_ZNetSceneAwake(ZNetScene __instance)
* static void ItemManager.PrefabManager::Patch_ZNetSceneAwake(ZNetScene __instance)
* static void Bears.Plugin+ZNetScene_Awake_Patch::Prefix(ZNetScene __instance)
3 postfixes:
* static void PieceManager.PiecePrefabManager::Patch_ZNetSceneAwakePost(ZNetScene __instance)
* static void CreatureManager.Creature+DropList::AddDropsToCreature(ZNetScene __instance)
* static void CustomTextures.BepInExPlugin+ZNetScene_Awake_Patch::Postfix(ZNetScene __instance, System.Collections.Generic.Dictionary<int, UnityEngine.GameObject> ___m_namedPrefabs)

[Info   :  HarmonyX] Running ILHook manipulator on void ZNetScene::Awake()
[Info   :  HarmonyX] Writing prefixes
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] Patching void ObjectDB::CopyOtherDB(ObjectDB other) with 2 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static void ItemManager.Item::Patch_ObjectDBInit(ObjectDB __instance)
* static void Patches+ObjectCopyPatch::Prefix(ObjectDB __instance)
2 postfixes:
* static void ItemManager.PrefabManager::Patch_ObjectDBInit(ObjectDB __instance)
* static void Bears.Plugin+ObjectDB_CopyOtherDB_Patch::Postfix()

[Info   :  HarmonyX] Running ILHook manipulator on void ObjectDB::CopyOtherDB(ObjectDB other)
[Info   :  HarmonyX] Writing prefixes
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] Patching void ObjectDB::Awake() with 3 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
3 prefixes:
* static void ItemManager.PrefabManager::Patch_ObjectDBInit(ObjectDB __instance)
* static void ItemManager.Item::Patch_ObjectDBInit(ObjectDB __instance)
* static void Patches+ObjectAwakePatch::Prefix(ObjectDB __instance)
2 postfixes:
* static void PieceManager.BuildPiece::Patch_ObjectDBInit(ObjectDB __instance)
* static void Bears.Plugin+ObjectDB_Awake_Patch::Postfix()

[Info   :  HarmonyX] Running ILHook manipulator on void ObjectDB::Awake()
[Info   :  HarmonyX] Writing prefixes
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] Patching void SpawnSystem::UpdateSpawnList(System.Collections.Generic.List<SpawnSystem+SpawnData> spawners, DateTime currentTime, bool eventSpawners) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void Bears.Plugin+SpawnSystem_Patch::SpawnBear(SpawnSystem __instance)

[Info   :  HarmonyX] Running ILHook manipulator on void SpawnSystem::UpdateSpawnList(System.Collections.Generic.List<SpawnSystem+SpawnData> spawners, DateTime currentTime, bool eventSpawners)
[Info   :  HarmonyX] Writing postfixes
[Info   :   BepInEx] Loading [Vortex Worlds 1.0.1]
[Message:   BepInEx] Chainloader startup complete
[Debug  : OdinHorse] ReadConfigValues called
[Debug  :OdinBanners] ReadConfigValues called
[Info   :  HarmonyX] Patching void AutoJumpLedge::OnTriggerStay(UnityEngine.Collider collider) with 0 prefixes, 0 postfixes, 0 transpilers, 0 finalizers

[Info   :  HarmonyX] Running ILHook manipulator on void AutoJumpLedge::OnTriggerStay(UnityEngine.Collider collider)
[Info   :  HarmonyX] Patching void HotkeyBar::UpdateIcons(Player player) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void ValheimPlus.UI.HotkeyBar_UpdateIcons_Patch::Postfix(HotkeyBar& __instance, Player& player)

[Info   :  HarmonyX] Running ILHook manipulator on void HotkeyBar::UpdateIcons(Player player)
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] Patching bool Humanoid::EquipItem(ItemDrop+ItemData item, bool triggerEquipEffects) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool EquipmentAndQuickSlots.EquipmentSlotHelper+Humanoid_EquipItem_Patch::Prefix()
1 postfixes:
* static bool ValheimPlus.GameClasses.Humanoid_EquipItem_Patch::Postfix(bool __result, Humanoid __instance, ItemDrop+ItemData item)

[Info   :  HarmonyX] Running ILHook manipulator on bool Humanoid::EquipItem(ItemDrop+ItemData item, bool triggerEquipEffects)
[Info   :  HarmonyX] Writing prefixes
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] Patching bool Humanoid::EquipItem(ItemDrop+ItemData item, bool triggerEquipEffects) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static bool ValheimPlus.GameClasses.Humanoid_EquipItem_Patch::Postfix(bool __result, Humanoid __instance, ItemDrop+ItemData item)

[Info   :  HarmonyX] Running ILHook manipulator on bool Humanoid::EquipItem(ItemDrop+ItemData item, bool triggerEquipEffects)
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] Patching void Humanoid::UnequipItem(ItemDrop+ItemData item, bool triggerEquipEffects) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void ValheimPlus.GameClasses.Humanoid_UnequipItem_Patch::Postfix(Humanoid __instance, ItemDrop+ItemData item)

[Info   :  HarmonyX] Running ILHook manipulator on void Humanoid::UnequipItem(ItemDrop+ItemData item, bool triggerEquipEffects)
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] Patching bool Inventory::IsTeleportable() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void ValheimPlus.GameClasses.noItemTeleportPrevention::Postfix(Boolean& __result)

[Info   :  HarmonyX] Running ILHook manipulator on bool Inventory::IsTeleportable()
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] Patching virtual void Player::Awake() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void ValheimPlus.GameClasses.Player_Awake_Patch::Postfix(Player& __instance)

[Info   :  HarmonyX] Running ILHook manipulator on virtual void Player::Awake()
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] Patching static void Terminal::InitTerminal() with 0 prefixes, 0 postfixes, 0 transpilers, 0 finalizers

[Info   :  HarmonyX] Running ILHook manipulator on static void Terminal::InitTerminal()
[Info   :  HarmonyX] Patching void Hud::Awake() with 0 prefixes, 0 postfixes, 0 transpilers, 0 finalizers

[Info   :  HarmonyX] Running ILHook manipulator on void Hud::Awake()
[Info   :  HarmonyX] Patching void Hud::Update() with 0 prefixes, 0 postfixes, 0 transpilers, 0 finalizers

[Info   :  HarmonyX] Running ILHook manipulator on void Hud::Update()
[Info   :  HarmonyX] Patching void Hud::OnDestroy() with 0 prefixes, 0 postfixes, 0 transpilers, 0 finalizers

[Info   :  HarmonyX] Running ILHook manipulator on void Hud::OnDestroy()
[Info   :  HarmonyX] Patching void HotkeyBar::Update() with 0 prefixes, 0 postfixes, 0 transpilers, 0 finalizers

[Info   :  HarmonyX] Running ILHook manipulator on void HotkeyBar::Update()
[Info   :  HarmonyX] Patching void GuiBar::Awake() with 0 prefixes, 0 postfixes, 0 transpilers, 0 finalizers

[Info   :  HarmonyX] Running ILHook manipulator on void GuiBar::Awake()
[Info   :  HarmonyX] Patching InventoryGrid+Element InventoryGrid::GetElement(int x, int y, int width) with 0 prefixes, 0 postfixes, 0 transpilers, 0 finalizers

[Info   :  HarmonyX] Running ILHook manipulator on InventoryGrid+Element InventoryGrid::GetElement(int x, int y, int width)
[Info   :  HarmonyX] Patching void InventoryGrid::UpdateGui(Player player, ItemDrop+ItemData dragItem) with 0 prefixes, 0 postfixes, 0 transpilers, 0 finalizers

[Info   :  HarmonyX] Running ILHook manipulator on void InventoryGrid::UpdateGui(Player player, ItemDrop+ItemData dragItem)
[Info   :  HarmonyX] Patching void InventoryGui::Awake() with 0 prefixes, 0 postfixes, 0 transpilers, 0 finalizers

[Info   :  HarmonyX] Running ILHook manipulator on void InventoryGui::Awake()
[Info   :  HarmonyX] Patching void InventoryGui::UpdateInventory(Player player) with 0 prefixes, 0 postfixes, 0 transpilers, 0 finalizers

[Info   :  HarmonyX] Running ILHook manipulator on void InventoryGui::UpdateInventory(Player player)
[Info   :  HarmonyX] Patching void InventoryGui::UpdateGamepad() with 0 prefixes, 0 postfixes, 0 transpilers, 0 finalizers

[Info   :  HarmonyX] Running ILHook manipulator on void InventoryGui::UpdateGamepad()
[Info   :  HarmonyX] Patching void InventoryGui::UpdateRecipeGamepadInput() with 0 prefixes, 0 postfixes, 0 transpilers, 0 finalizers

[Info   :  HarmonyX] Running ILHook manipulator on void InventoryGui::UpdateRecipeGamepadInput()
[Info   :  HarmonyX] Patching void InventoryGui::DoCrafting(Player player) with 0 prefixes, 0 postfixes, 0 transpilers, 0 finalizers

[Info   :  HarmonyX] Running ILHook manipulator on void InventoryGui::DoCrafting(Player player)
[Info   :  HarmonyX] Patching bool Inventory::CanAddItem(UnityEngine.GameObject prefab, int stack) with 0 prefixes, 0 postfixes, 0 transpilers, 0 finalizers

[Info   :  HarmonyX] Running ILHook manipulator on bool Inventory::CanAddItem(UnityEngine.GameObject prefab, int stack)
[Info   :  HarmonyX] Patching bool Inventory::CanAddItem(ItemDrop+ItemData item, int stack) with 0 prefixes, 0 postfixes, 0 transpilers, 0 finalizers

[Info   :  HarmonyX] Running ILHook manipulator on bool Inventory::CanAddItem(ItemDrop+ItemData item, int stack)
[Info   :  HarmonyX] Patching bool Inventory::AddItem(ItemDrop+ItemData item) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool EquipmentAndQuickSlots.Inventory_AddItem2_Patch::Prefix(Inventory __instance, Boolean& __result, ItemDrop+ItemData item, Boolean& __state)

[Info   :  HarmonyX] Running ILHook manipulator on bool Inventory::AddItem(ItemDrop+ItemData item)
[Info   :  HarmonyX] Writing prefixes
[Info   :  HarmonyX] Patching bool Inventory::AddItem(ItemDrop+ItemData item) with 0 prefixes, 0 postfixes, 0 transpilers, 0 finalizers

[Info   :  HarmonyX] Running ILHook manipulator on bool Inventory::AddItem(ItemDrop+ItemData item)
[Info   :  HarmonyX] Patching Vector2i Inventory::FindEmptySlot(bool topFirst) with 0 prefixes, 0 postfixes, 0 transpilers, 0 finalizers

[Info   :  HarmonyX] Running ILHook manipulator on Vector2i Inventory::FindEmptySlot(bool topFirst)
[Info   :  HarmonyX] Patching ItemDrop+ItemData Inventory::FindFreeStackItem(string name, int quality) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool EquipmentAndQuickSlots.Inventory_FindFreeStackItem_Patch::Prefix(Inventory __instance, string name, int quality, ItemDrop+ItemData& __result, Boolean& __state)

[Info   :  HarmonyX] Running ILHook manipulator on ItemDrop+ItemData Inventory::FindFreeStackItem(string name, int quality)
[Info   :  HarmonyX] Writing prefixes
[Info   :  HarmonyX] Patching ItemDrop+ItemData Inventory::FindFreeStackItem(string name, int quality) with 0 prefixes, 0 postfixes, 0 transpilers, 0 finalizers

[Info   :  HarmonyX] Running ILHook manipulator on ItemDrop+ItemData Inventory::FindFreeStackItem(string name, int quality)
[Info   :  HarmonyX] Patching bool Inventory::ContainsItem(ItemDrop+ItemData item) with 0 prefixes, 0 postfixes, 0 transpilers, 0 finalizers

[Info   :  HarmonyX] Running ILHook manipulator on bool Inventory::ContainsItem(ItemDrop+ItemData item)
[Info   :  HarmonyX] Patching bool Inventory::RemoveOneItem(ItemDrop+ItemData item) with 0 prefixes, 0 postfixes, 0 transpilers, 0 finalizers

[Info   :  HarmonyX] Running ILHook manipulator on bool Inventory::RemoveOneItem(ItemDrop+ItemData item)
[Info   :  HarmonyX] Patching bool Inventory::RemoveItem(ItemDrop+ItemData item) with 0 prefixes, 0 postfixes, 0 transpilers, 0 finalizers

[Info   :  HarmonyX] Running ILHook manipulator on bool Inventory::RemoveItem(ItemDrop+ItemData item)
[Info   :  HarmonyX] Patching bool Inventory::RemoveItem(ItemDrop+ItemData item, int amount) with 0 prefixes, 0 postfixes, 0 transpilers, 0 finalizers

[Info   :  HarmonyX] Running ILHook manipulator on bool Inventory::RemoveItem(ItemDrop+ItemData item, int amount)
[Info   :  HarmonyX] Patching void Inventory::RemoveItem(string name, int amount) with 0 prefixes, 0 postfixes, 0 transpilers, 0 finalizers

[Info   :  HarmonyX] Running ILHook manipulator on void Inventory::RemoveItem(string name, int amount)
[Info   :  HarmonyX] Patching bool Inventory::HaveItem(string name) with 0 prefixes, 0 postfixes, 0 transpilers, 0 finalizers

[Info   :  HarmonyX] Running ILHook manipulator on bool Inventory::HaveItem(string name)
[Info   :  HarmonyX] Patching void Inventory::GetAllPieceTables(System.Collections.Generic.List<PieceTable> tables) with 0 prefixes, 0 postfixes, 0 transpilers, 0 finalizers

[Info   :  HarmonyX] Running ILHook manipulator on void Inventory::GetAllPieceTables(System.Collections.Generic.List<PieceTable> tables)
[Info   :  HarmonyX] Patching int Inventory::CountItems(string name) with 0 prefixes, 0 postfixes, 0 transpilers, 0 finalizers

[Info   :  HarmonyX] Running ILHook manipulator on int Inventory::CountItems(string name)
[Info   :  HarmonyX] Patching ItemDrop+ItemData Inventory::GetItem(string name) with 0 prefixes, 0 postfixes, 0 transpilers, 0 finalizers

[Info   :  HarmonyX] Running ILHook manipulator on ItemDrop+ItemData Inventory::GetItem(string name)
[Info   :  HarmonyX] Patching ItemDrop+ItemData Inventory::GetAmmoItem(string ammoName) with 0 prefixes, 0 postfixes, 0 transpilers, 0 finalizers

[Info   :  HarmonyX] Running ILHook manipulator on ItemDrop+ItemData Inventory::GetAmmoItem(string ammoName)
[Info   :  HarmonyX] Patching int Inventory::FindFreeStackSpace(string name) with 0 prefixes, 0 postfixes, 0 transpilers, 0 finalizers

[Info   :  HarmonyX] Running ILHook manipulator on int Inventory::FindFreeStackSpace(string name)
[Info   :  HarmonyX] Patching int Inventory::NrOfItems() with 0 prefixes, 0 postfixes, 0 transpilers, 0 finalizers

[Info   :  HarmonyX] Running ILHook manipulator on int Inventory::NrOfItems()
[Info   :  HarmonyX] Patching float Inventory::SlotsUsedPercentage() with 0 prefixes, 0 postfixes, 0 transpilers, 0 finalizers

[Info   :  HarmonyX] Running ILHook manipulator on float Inventory::SlotsUsedPercentage()
[Info   :  HarmonyX] Patching int Inventory::GetEmptySlots() with 0 prefixes, 0 postfixes, 0 transpilers, 0 finalizers

[Info   :  HarmonyX] Running ILHook manipulator on int Inventory::GetEmptySlots()
[Info   :  HarmonyX] Patching bool Inventory::HaveEmptySlot() with 0 prefixes, 0 postfixes, 0 transpilers, 0 finalizers

[Info   :  HarmonyX] Running ILHook manipulator on bool Inventory::HaveEmptySlot()
[Info   :  HarmonyX] Patching System.Collections.Generic.List<ItemDrop+ItemData> Inventory::GetEquipedtems() with 0 prefixes, 0 postfixes, 0 transpilers, 0 finalizers

[Info   :  HarmonyX] Running ILHook manipulator on System.Collections.Generic.List<ItemDrop+ItemData> Inventory::GetEquipedtems()
[Info   :  HarmonyX] Patching void Inventory::GetWornItems(System.Collections.Generic.List<ItemDrop+ItemData> worn) with 0 prefixes, 0 postfixes, 0 transpilers, 0 finalizers

[Info   :  HarmonyX] Running ILHook manipulator on void Inventory::GetWornItems(System.Collections.Generic.List<ItemDrop+ItemData> worn)
[Info   :  HarmonyX] Patching void Inventory::GetValuableItems(System.Collections.Generic.List<ItemDrop+ItemData> items) with 0 prefixes, 0 postfixes, 0 transpilers, 0 finalizers

[Info   :  HarmonyX] Running ILHook manipulator on void Inventory::GetValuableItems(System.Collections.Generic.List<ItemDrop+ItemData> items)
[Info   :  HarmonyX] Patching System.Collections.Generic.List<ItemDrop+ItemData> Inventory::GetAllItems() with 0 prefixes, 0 postfixes, 0 transpilers, 0 finalizers

[Info   :  HarmonyX] Running ILHook manipulator on System.Collections.Generic.List<ItemDrop+ItemData> Inventory::GetAllItems()
[Info   :  HarmonyX] Patching void Inventory::GetAllItems(string name, System.Collections.Generic.List<ItemDrop+ItemData> items) with 0 prefixes, 0 postfixes, 0 transpilers, 0 finalizers

[Info   :  HarmonyX] Running ILHook manipulator on void Inventory::GetAllItems(string name, System.Collections.Generic.List<ItemDrop+ItemData> items)
[Info   :  HarmonyX] Patching void Inventory::GetAllItems(ItemDrop+ItemData+ItemType type, System.Collections.Generic.List<ItemDrop+ItemData> items) with 0 prefixes, 0 postfixes, 0 transpilers, 0 finalizers

[Info   :  HarmonyX] Running ILHook manipulator on void Inventory::GetAllItems(ItemDrop+ItemData+ItemType type, System.Collections.Generic.List<ItemDrop+ItemData> items)
[Info   :  HarmonyX] Patching void Inventory::UpdateTotalWeight() with 0 prefixes, 0 postfixes, 0 transpilers, 0 finalizers

[Info   :  HarmonyX] Running ILHook manipulator on void Inventory::UpdateTotalWeight()
[Info   :  HarmonyX] Patching void Player::Save(ZPackage pkg) with 0 prefixes, 0 postfixes, 0 transpilers, 0 finalizers

[Info   :  HarmonyX] Running ILHook manipulator on void Player::Save(ZPackage pkg)
[Info   :  HarmonyX] Patching void Player::Load(ZPackage pkg) with 0 prefixes, 0 postfixes, 0 transpilers, 0 finalizers

[Info   :  HarmonyX] Running ILHook manipulator on void Player::Load(ZPackage pkg)
[Info   :  HarmonyX] Patching void Player::CreateTombStone() with 0 prefixes, 0 postfixes, 0 transpilers, 0 finalizers

[Info   :  HarmonyX] Running ILHook manipulator on void Player::CreateTombStone()
[Info   :  HarmonyX] Patching Player Game::SpawnPlayer(UnityEngine.Vector3 spawnPoint) with 0 prefixes, 0 postfixes, 0 transpilers, 0 finalizers

[Info   :  HarmonyX] Running ILHook manipulator on Player Game::SpawnPlayer(UnityEngine.Vector3 spawnPoint)
[Info   :  HarmonyX] Patching void TombStone::OnTakeAllSuccess() with 0 prefixes, 0 postfixes, 0 transpilers, 0 finalizers

[Info   :  HarmonyX] Running ILHook manipulator on void TombStone::OnTakeAllSuccess()
[Info   :  HarmonyX] Patching void TextsDialog::UpdateTextsList() with 0 prefixes, 0 postfixes, 0 transpilers, 0 finalizers

[Info   :  HarmonyX] Running ILHook manipulator on void TextsDialog::UpdateTextsList()
[Info   :  HarmonyX] Patching void Container::Load() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void EquipmentAndQuickSlots.Container_Load_Patch::Prefix(Container __instance, Boolean& __state)

[Info   : 